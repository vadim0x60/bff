node {
  name: "global/NoOp"
  op: "NoOp"
  device: "/device:CPU:0"
}
node {
  name: "global/learning_rate"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.999999873689376e-05
      }
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/obs_embed/embeddings/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/obs_embed/embeddings/Initializer/random_uniform/max"
  input: "global/obs_embed/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/obs_embed/embeddings/Initializer/random_uniform/RandomUniform"
  input: "global/obs_embed/embeddings/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Initializer/random_uniform"
  op: "Add"
  input: "global/obs_embed/embeddings/Initializer/random_uniform/mul"
  input: "global/obs_embed/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/obs_embed/embeddings"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/obs_embed/embeddings"
    }
  }
}
node {
  name: "global/obs_embed/embeddings/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Assign"
  op: "AssignVariableOp"
  input: "global/obs_embed/embeddings"
  input: "global/obs_embed/embeddings/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/obs_embed/embeddings/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/Fill/dims"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/Fill"
  op: "Fill"
  input: "global/Fill/dims"
  input: "global/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy/rnn/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_1"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_4"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_5"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy/rnn/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
          dim {
            size: 4
          }
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "global/policy/rnn/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/Gather"
  op: "ResourceGather"
  input: "global/obs_embed/embeddings"
  input: "global/Fill"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "global/policy/rnn/Identity"
  op: "Identity"
  input: "global/policy/rnn/Gather"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "global/policy/rnn/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/policy/rnn/rnn_output_0/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/rnn_output_0"
  op: "TensorArrayV3"
  input: "global/policy/rnn/rnn_output_0/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/policy/rnn/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "global/policy/rnn/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/concat"
  op: "ConcatV2"
  input: "global/policy/rnn/Const_1"
  input: "global/policy/rnn/Const_2"
  input: "global/policy/rnn/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/zeros_1"
  op: "Fill"
  input: "global/policy/rnn/concat"
  input: "global/policy/rnn/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter"
  op: "Enter"
  input: "global/policy/rnn/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_1"
  op: "Enter"
  input: "global/policy/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_2"
  op: "Enter"
  input: "global/policy/rnn/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_3"
  op: "Enter"
  input: "global/policy/rnn/rnn_output_0:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_4"
  op: "Enter"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_5"
  op: "Enter"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_6"
  op: "Enter"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_7"
  op: "Enter"
  input: "global/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_8"
  op: "Enter"
  input: "global/policy/rnn/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_9"
  op: "Enter"
  input: "global/policy/rnn/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Enter_10"
  op: "Enter"
  input: "global/policy/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge"
  op: "Merge"
  input: "global/policy/rnn/while/Enter"
  input: "global/policy/rnn/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_1"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_1"
  input: "global/policy/rnn/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_2"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_2"
  input: "global/policy/rnn/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_3"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_3"
  input: "global/policy/rnn/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_4"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_4"
  input: "global/policy/rnn/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_5"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_5"
  input: "global/policy/rnn/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_6"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_6"
  input: "global/policy/rnn/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_7"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_7"
  input: "global/policy/rnn/while/NextIteration_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_8"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_8"
  input: "global/policy/rnn/while/NextIteration_8"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_9"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_9"
  input: "global/policy/rnn/while/NextIteration_9"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Merge_10"
  op: "Merge"
  input: "global/policy/rnn/while/Enter_10"
  input: "global/policy/rnn/while/NextIteration_10"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Const"
  op: "Const"
  input: "^global/policy/rnn/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/All"
  op: "All"
  input: "global/policy/rnn/while/Merge_1"
  input: "global/policy/rnn/while/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy/rnn/while/LogicalNot"
  op: "LogicalNot"
  input: "global/policy/rnn/while/All"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LoopCond"
  op: "LoopCond"
  input: "global/policy/rnn/while/LogicalNot"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch"
  op: "Switch"
  input: "global/policy/rnn/while/Merge"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_1"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_1"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_2"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_2"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_3"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_3"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_4"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_4"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_5"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_5"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_6"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_6"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_7"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_7"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_8"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_8"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_9"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_9"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Switch_10"
  op: "Switch"
  input: "global/policy/rnn/while/Merge_10"
  input: "global/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/Merge_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity"
  op: "Identity"
  input: "global/policy/rnn/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_1"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_2"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_3"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_4"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_5"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_6"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_7"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_7:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_8"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_8:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_9"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_9:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_10"
  op: "Identity"
  input: "global/policy/rnn/while/Switch_10:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "A\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.15047095715999603
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15047095715999603
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 65
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  op: "Identity"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  op: "Identity"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "global/policy/rnn/while/Identity_2"
  input: "global/policy/rnn/while/Identity_5"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "global/policy/rnn/while/Identity_4"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Assign"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  op: "Identity"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Assign"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  op: "Identity"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "global/policy/rnn/while/Identity_7"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "global/policy/rnn/while/Identity_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.29277002811431885
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.29277002811431885
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/max"
  input: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/RandomUniform"
  input: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform"
  op: "Add"
  input: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/mul"
  input: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/policy/rnn/LinearWrapper/w_output"
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/w_output"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Assign"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/w_output"
  input: "global/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/w_output"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy/rnn/LinearWrapper/w_output/Read/Identity"
  op: "Identity"
  input: "global/policy/rnn/LinearWrapper/w_output/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/MatMul"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "global/policy/rnn/while/LinearWrapper/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/MatMul/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/w_output/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/add/y"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/add"
  op: "AddV2"
  input: "global/policy/rnn/while/Identity"
  input: "global/policy/rnn/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/mul/y"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/mul"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/MatMul"
  input: "global/policy/rnn/while/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LogicalNot_1"
  op: "LogicalNot"
  input: "global/policy/rnn/while/Identity_10"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/multinomial/Multinomial/num_samples"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/multinomial/Multinomial"
  op: "Multinomial"
  input: "global/policy/rnn/while/mul"
  input: "global/policy/rnn/while/multinomial/Multinomial/num_samples"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/policy/rnn/while/strided_slice/stack"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/strided_slice/stack_1"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/strided_slice/stack_2"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/strided_slice"
  op: "StridedSlice"
  input: "global/policy/rnn/while/multinomial/Multinomial"
  input: "global/policy/rnn/while/strided_slice/stack"
  input: "global/policy/rnn/while/strided_slice/stack_1"
  input: "global/policy/rnn/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "global/policy/rnn/while/zeros"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 4
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Select"
  op: "Select"
  input: "global/policy/rnn/while/LogicalNot_1"
  input: "global/policy/rnn/while/strided_slice"
  input: "global/policy/rnn/while/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/ToInt32"
  op: "Cast"
  input: "global/policy/rnn/while/Select"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Equal/y"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Equal"
  op: "Equal"
  input: "global/policy/rnn/while/ToInt32"
  input: "global/policy/rnn/while/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "global/policy/rnn/while/GreaterEqual/y"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "global/policy/rnn/while/add"
  input: "global/policy/rnn/while/GreaterEqual/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LogicalOr"
  op: "LogicalOr"
  input: "global/policy/rnn/while/Equal"
  input: "global/policy/rnn/while/GreaterEqual"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/add_1/y"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/add_1"
  op: "AddV2"
  input: "global/policy/rnn/while/add"
  input: "global/policy/rnn/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/ExpandDims/dim"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/ExpandDims"
  op: "ExpandDims"
  input: "global/policy/rnn/while/add_1"
  input: "global/policy/rnn/while/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Tile/multiples"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Tile"
  op: "Tile"
  input: "global/policy/rnn/while/ExpandDims"
  input: "global/policy/rnn/while/Tile/multiples"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Select_1"
  op: "Select"
  input: "global/policy/rnn/while/LogicalOr"
  input: "global/policy/rnn/while/Identity_9"
  input: "global/policy/rnn/while/Tile"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Gather"
  op: "ResourceGather"
  input: "global/policy/rnn/while/Gather/Enter"
  input: "global/policy/rnn/while/ToInt32"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "global/policy/rnn/while/Gather/Enter"
  op: "Enter"
  input: "global/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Identity_11"
  op: "Identity"
  input: "global/policy/rnn/while/Gather"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/sub/y"
  op: "Const"
  input: "^global/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/sub"
  op: "Sub"
  input: "global/policy/rnn/while/add"
  input: "global/policy/rnn/while/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "global/policy/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "global/policy/rnn/while/sub"
  input: "global/policy/rnn/while/ToInt32"
  input: "global/policy/rnn/while/Identity_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/ToInt32"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "global/policy/rnn/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/ToInt32"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LogicalOr_1"
  op: "LogicalOr"
  input: "global/policy/rnn/while/Identity_10"
  input: "global/policy/rnn/while/LogicalOr"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Select_2"
  op: "Select"
  input: "global/policy/rnn/while/Identity_1"
  input: "global/policy/rnn/while/Select_2/Enter"
  input: "global/policy/rnn/while/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Select_2/Enter"
  op: "Enter"
  input: "global/policy/rnn/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/Select_3"
  op: "Select"
  input: "global/policy/rnn/while/Identity_1"
  input: "global/policy/rnn/while/Identity_4"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Select_4"
  op: "Select"
  input: "global/policy/rnn/while/Identity_1"
  input: "global/policy/rnn/while/Identity_5"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Select_5"
  op: "Select"
  input: "global/policy/rnn/while/Identity_1"
  input: "global/policy/rnn/while/Identity_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Select_6"
  op: "Select"
  input: "global/policy/rnn/while/Identity_1"
  input: "global/policy/rnn/while/Identity_7"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "global/policy/rnn/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "global/policy/rnn/while/Identity"
  input: "global/policy/rnn/while/Select_2"
  input: "global/policy/rnn/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "global/policy/rnn/rnn_output_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LogicalOr_2"
  op: "LogicalOr"
  input: "global/policy/rnn/while/Identity_1"
  input: "global/policy/rnn/while/LogicalOr"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration"
  op: "NextIteration"
  input: "global/policy/rnn/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "global/policy/rnn/while/LogicalOr_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "global/policy/rnn/while/Identity_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "global/policy/rnn/while/TensorArrayWrite_1/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "global/policy/rnn/while/Select_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "global/policy/rnn/while/Select_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "global/policy/rnn/while/Select_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_7"
  op: "NextIteration"
  input: "global/policy/rnn/while/Select_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_8"
  op: "NextIteration"
  input: "global/policy/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_9"
  op: "NextIteration"
  input: "global/policy/rnn/while/Select_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/NextIteration_10"
  op: "NextIteration"
  input: "global/policy/rnn/while/LogicalOr_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit"
  op: "Exit"
  input: "global/policy/rnn/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_1"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_2"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_3"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_4"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_5"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_6"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_7"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_8"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_9"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/Exit_10"
  op: "Exit"
  input: "global/policy/rnn/while/Switch_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "global/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "global/policy/rnn/rnn_output_0"
  input: "global/policy/rnn/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/TensorArrayStack/range"
  op: "Range"
  input: "global/TensorArrayStack/range/start"
  input: "global/TensorArrayStack/TensorArraySizeV3"
  input: "global/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "global/policy/rnn/rnn_output_0"
  input: "global/TensorArrayStack/range"
  input: "global/policy/rnn/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 20
        }
      }
    }
  }
}
node {
  name: "global/policy_logits/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy_logits"
  op: "Transpose"
  input: "global/TensorArrayStack/TensorArrayGatherV3"
  input: "global/policy_logits/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "global/policy/rnn/TensorArray"
  input: "global/policy/rnn/while/Exit_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/TensorArrayStack_1/range"
  op: "Range"
  input: "global/TensorArrayStack_1/range/start"
  input: "global/TensorArrayStack_1/TensorArraySizeV3"
  input: "global/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "global/policy/rnn/TensorArray"
  input: "global/TensorArrayStack_1/range"
  input: "global/policy/rnn/while/Exit_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "global/sampled_tokens/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/sampled_tokens"
  op: "Transpose"
  input: "global/TensorArrayStack_1/TensorArrayGatherV3"
  input: "global/sampled_tokens/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/Softmax"
  op: "Softmax"
  input: "global/policy_logits"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/LogSoftmax"
  op: "LogSoftmax"
  input: "global/policy_logits"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/adjusted_lengths"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "global/policy_multipliers"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "global/empirical_values"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "global/off_policy_targets"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "global/off_policy_target_lengths"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "global/actions"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "global/Shape"
  op: "Shape"
  input: "global/actions"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice"
  op: "StridedSlice"
  input: "global/Shape"
  input: "global/strided_slice/stack"
  input: "global/strided_slice/stack_1"
  input: "global/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/Fill_1/dims/1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/Fill_1/dims"
  op: "Pack"
  input: "global/strided_slice"
  input: "global/Fill_1/dims/1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/Fill_1/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/Fill_1"
  op: "Fill"
  input: "global/Fill_1/dims"
  input: "global/Fill_1/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "global/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_1"
  op: "StridedSlice"
  input: "global/actions"
  input: "global/strided_slice_1/stack"
  input: "global/strided_slice_1/stack_1"
  input: "global/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/concat"
  op: "ConcatV2"
  input: "global/Fill_1"
  input: "global/strided_slice_1"
  input: "global/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/Gather"
  op: "ResourceGather"
  input: "global/obs_embed/embeddings"
  input: "global/concat"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "global/policy_1/Identity"
  op: "Identity"
  input: "global/policy_1/Gather"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/range"
  op: "Range"
  input: "global/policy_1/rnn/range/start"
  input: "global/policy_1/rnn/Rank"
  input: "global/policy_1/rnn/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/concat/values_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/concat"
  op: "ConcatV2"
  input: "global/policy_1/rnn/concat/values_0"
  input: "global/policy_1/rnn/range"
  input: "global/policy_1/rnn/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/transpose"
  op: "Transpose"
  input: "global/policy_1/Identity"
  input: "global/policy_1/rnn/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/sequence_length"
  op: "Identity"
  input: "global/adjusted_lengths"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Shape"
  op: "Shape"
  input: "global/policy_1/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice"
  op: "StridedSlice"
  input: "global/policy_1/rnn/Shape"
  input: "global/policy_1/rnn/strided_slice/stack"
  input: "global/policy_1/rnn/strided_slice/stack_1"
  input: "global/policy_1/rnn/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Shape_1"
  op: "Shape"
  input: "global/policy_1/rnn/sequence_length"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/stack"
  op: "Pack"
  input: "global/policy_1/rnn/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/policy_1/rnn/Equal"
  op: "Equal"
  input: "global/policy_1/rnn/Shape_1"
  input: "global/policy_1/rnn/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "global/policy_1/rnn/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/All"
  op: "All"
  input: "global/policy_1/rnn/Equal"
  input: "global/policy_1/rnn/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy_1/rnn/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor global/policy_1/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor global/policy_1/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Assert/Assert/data_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Assert/Assert"
  op: "Assert"
  input: "global/policy_1/rnn/All"
  input: "global/policy_1/rnn/Assert/Assert/data_0"
  input: "global/policy_1/rnn/stack"
  input: "global/policy_1/rnn/Assert/Assert/data_2"
  input: "global/policy_1/rnn/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "global/policy_1/rnn/CheckSeqLen"
  op: "Identity"
  input: "global/policy_1/rnn/sequence_length"
  input: "^global/policy_1/rnn/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Shape_2"
  op: "Shape"
  input: "global/policy_1/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "global/policy_1/rnn/Shape_2"
  input: "global/policy_1/rnn/strided_slice_1/stack"
  input: "global/policy_1/rnn/strided_slice_1/stack_1"
  input: "global/policy_1/rnn/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/policy_1/rnn/Shape_3"
  op: "Shape"
  input: "global/policy_1/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "global/policy_1/rnn/Shape_3"
  input: "global/policy_1/rnn/strided_slice_2/stack"
  input: "global/policy_1/rnn/strided_slice_2/stack_1"
  input: "global/policy_1/rnn/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/policy_1/rnn/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/ExpandDims"
  op: "ExpandDims"
  input: "global/policy_1/rnn/strided_slice_2"
  input: "global/policy_1/rnn/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/concat_1"
  op: "ConcatV2"
  input: "global/policy_1/rnn/ExpandDims"
  input: "global/policy_1/rnn/Const_1"
  input: "global/policy_1/rnn/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/zeros"
  op: "Fill"
  input: "global/policy_1/rnn/concat_1"
  input: "global/policy_1/rnn/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Min"
  op: "Min"
  input: "global/policy_1/rnn/CheckSeqLen"
  input: "global/policy_1/rnn/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy_1/rnn/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Max"
  op: "Max"
  input: "global/policy_1/rnn/CheckSeqLen"
  input: "global/policy_1/rnn/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy_1/rnn/time"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "global/policy_1/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "global/policy_1/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "global/policy_1/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "global/policy_1/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "global/policy_1/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "global/policy_1/rnn/TensorArrayUnstack/Shape"
  input: "global/policy_1/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "global/policy_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "global/policy_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "global/policy_1/rnn/TensorArrayUnstack/range/start"
  input: "global/policy_1/rnn/TensorArrayUnstack/strided_slice"
  input: "global/policy_1/rnn/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "global/policy_1/rnn/TensorArray_1"
  input: "global/policy_1/rnn/TensorArrayUnstack/range"
  input: "global/policy_1/rnn/transpose"
  input: "global/policy_1/rnn/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Maximum"
  op: "Maximum"
  input: "global/policy_1/rnn/Maximum/x"
  input: "global/policy_1/rnn/Max"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Minimum"
  op: "Minimum"
  input: "global/policy_1/rnn/strided_slice_1"
  input: "global/policy_1/rnn/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Enter"
  op: "Enter"
  input: "global/policy_1/rnn/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Enter_1"
  op: "Enter"
  input: "global/policy_1/rnn/time"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Enter_2"
  op: "Enter"
  input: "global/policy_1/rnn/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Enter_3"
  op: "Enter"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Enter_4"
  op: "Enter"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Enter_5"
  op: "Enter"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Enter_6"
  op: "Enter"
  input: "global/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Merge"
  op: "Merge"
  input: "global/policy_1/rnn/while/Enter"
  input: "global/policy_1/rnn/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Merge_1"
  op: "Merge"
  input: "global/policy_1/rnn/while/Enter_1"
  input: "global/policy_1/rnn/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Merge_2"
  op: "Merge"
  input: "global/policy_1/rnn/while/Enter_2"
  input: "global/policy_1/rnn/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Merge_3"
  op: "Merge"
  input: "global/policy_1/rnn/while/Enter_3"
  input: "global/policy_1/rnn/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Merge_4"
  op: "Merge"
  input: "global/policy_1/rnn/while/Enter_4"
  input: "global/policy_1/rnn/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Merge_5"
  op: "Merge"
  input: "global/policy_1/rnn/while/Enter_5"
  input: "global/policy_1/rnn/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Merge_6"
  op: "Merge"
  input: "global/policy_1/rnn/while/Enter_6"
  input: "global/policy_1/rnn/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Less"
  op: "Less"
  input: "global/policy_1/rnn/while/Merge"
  input: "global/policy_1/rnn/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Less/Enter"
  op: "Enter"
  input: "global/policy_1/rnn/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Less_1"
  op: "Less"
  input: "global/policy_1/rnn/while/Merge_1"
  input: "global/policy_1/rnn/while/Less_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "global/policy_1/rnn/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "global/policy_1/rnn/while/Less"
  input: "global/policy_1/rnn/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/LoopCond"
  op: "LoopCond"
  input: "global/policy_1/rnn/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Switch"
  op: "Switch"
  input: "global/policy_1/rnn/while/Merge"
  input: "global/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Switch_1"
  op: "Switch"
  input: "global/policy_1/rnn/while/Merge_1"
  input: "global/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Switch_2"
  op: "Switch"
  input: "global/policy_1/rnn/while/Merge_2"
  input: "global/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Switch_3"
  op: "Switch"
  input: "global/policy_1/rnn/while/Merge_3"
  input: "global/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Switch_4"
  op: "Switch"
  input: "global/policy_1/rnn/while/Merge_4"
  input: "global/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Switch_5"
  op: "Switch"
  input: "global/policy_1/rnn/while/Merge_5"
  input: "global/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Switch_6"
  op: "Switch"
  input: "global/policy_1/rnn/while/Merge_6"
  input: "global/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Identity"
  op: "Identity"
  input: "global/policy_1/rnn/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Identity_1"
  op: "Identity"
  input: "global/policy_1/rnn/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Identity_2"
  op: "Identity"
  input: "global/policy_1/rnn/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Identity_3"
  op: "Identity"
  input: "global/policy_1/rnn/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Identity_4"
  op: "Identity"
  input: "global/policy_1/rnn/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Identity_5"
  op: "Identity"
  input: "global/policy_1/rnn/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Identity_6"
  op: "Identity"
  input: "global/policy_1/rnn/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/add/y"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/add"
  op: "AddV2"
  input: "global/policy_1/rnn/while/Identity"
  input: "global/policy_1/rnn/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "global/policy_1/rnn/while/TensorArrayReadV3/Enter"
  input: "global/policy_1/rnn/while/Identity_1"
  input: "global/policy_1/rnn/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy_1/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "global/policy_1/rnn/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "global/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "global/policy_1/rnn/while/Identity_1"
  input: "global/policy_1/rnn/while/GreaterEqual/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "global/policy_1/rnn/CheckSeqLen"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "global/policy_1/rnn/while/TensorArrayReadV3"
  input: "global/policy_1/rnn/while/Identity_4"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_4"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "global/policy_1/rnn/while/Identity_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "global/policy_1/rnn/while/Identity_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_4"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "global/policy_1/rnn/while/Identity_5"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/LinearWrapper/MatMul"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "global/policy_1/rnn/while/LinearWrapper/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy_1/rnn/while/LinearWrapper/MatMul/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/w_output/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Select"
  op: "Select"
  input: "global/policy_1/rnn/while/GreaterEqual"
  input: "global/policy_1/rnn/while/Select/Enter"
  input: "global/policy_1/rnn/while/LinearWrapper/MatMul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Select/Enter"
  op: "Enter"
  input: "global/policy_1/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Select_1"
  op: "Select"
  input: "global/policy_1/rnn/while/GreaterEqual"
  input: "global/policy_1/rnn/while/Identity_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Select_2"
  op: "Select"
  input: "global/policy_1/rnn/while/GreaterEqual"
  input: "global/policy_1/rnn/while/Identity_4"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Select_3"
  op: "Select"
  input: "global/policy_1/rnn/while/GreaterEqual"
  input: "global/policy_1/rnn/while/Identity_5"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Select_4"
  op: "Select"
  input: "global/policy_1/rnn/while/GreaterEqual"
  input: "global/policy_1/rnn/while/Identity_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "global/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "global/policy_1/rnn/while/Identity_1"
  input: "global/policy_1/rnn/while/Select"
  input: "global/policy_1/rnn/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "global/policy_1/rnn/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_1/rnn/while/add_1/y"
  op: "Const"
  input: "^global/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/add_1"
  op: "AddV2"
  input: "global/policy_1/rnn/while/Identity_1"
  input: "global/policy_1/rnn/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/NextIteration"
  op: "NextIteration"
  input: "global/policy_1/rnn/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "global/policy_1/rnn/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "global/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "global/policy_1/rnn/while/Select_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "global/policy_1/rnn/while/Select_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "global/policy_1/rnn/while/Select_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "global/policy_1/rnn/while/Select_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Exit"
  op: "Exit"
  input: "global/policy_1/rnn/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Exit_1"
  op: "Exit"
  input: "global/policy_1/rnn/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Exit_2"
  op: "Exit"
  input: "global/policy_1/rnn/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Exit_3"
  op: "Exit"
  input: "global/policy_1/rnn/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Exit_4"
  op: "Exit"
  input: "global/policy_1/rnn/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Exit_5"
  op: "Exit"
  input: "global/policy_1/rnn/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/while/Exit_6"
  op: "Exit"
  input: "global/policy_1/rnn/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "global/policy_1/rnn/TensorArray"
  input: "global/policy_1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayStack/range"
  op: "Range"
  input: "global/policy_1/rnn/TensorArrayStack/range/start"
  input: "global/policy_1/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "global/policy_1/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "global/policy_1/rnn/TensorArray"
  input: "global/policy_1/rnn/TensorArrayStack/range"
  input: "global/policy_1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/Rank_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/range_1"
  op: "Range"
  input: "global/policy_1/rnn/range_1/start"
  input: "global/policy_1/rnn/Rank_1"
  input: "global/policy_1/rnn/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/concat_2/values_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/concat_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/concat_2"
  op: "ConcatV2"
  input: "global/policy_1/rnn/concat_2/values_0"
  input: "global/policy_1/rnn/range_1"
  input: "global/policy_1/rnn/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_1/rnn/transpose_1"
  op: "Transpose"
  input: "global/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "global/policy_1/rnn/concat_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/Softmax_1"
  op: "Softmax"
  input: "global/policy_1/rnn/transpose_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/LogSoftmax_1"
  op: "LogSoftmax"
  input: "global/policy_1/rnn/transpose_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/Shape_1"
  op: "Shape"
  input: "global/actions"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice_2"
  op: "StridedSlice"
  input: "global/Shape_1"
  input: "global/strided_slice_2/stack"
  input: "global/strided_slice_2/stack_1"
  input: "global/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/range"
  op: "Range"
  input: "global/range/start"
  input: "global/strided_slice_2"
  input: "global/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/ExpandDims"
  op: "ExpandDims"
  input: "global/range"
  input: "global/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/ExpandDims_1"
  op: "ExpandDims"
  input: "global/adjusted_lengths"
  input: "global/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/Less"
  op: "Less"
  input: "global/ExpandDims"
  input: "global/ExpandDims_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/Cast"
  op: "Cast"
  input: "global/Less"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/ExpandDims_2"
  op: "ExpandDims"
  input: "global/Cast"
  input: "global/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/mul"
  op: "Mul"
  input: "global/Softmax_1"
  input: "global/ExpandDims_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/mul_1"
  op: "Mul"
  input: "global/LogSoftmax_1"
  input: "global/ExpandDims_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/mul_2"
  op: "Mul"
  input: "global/policy_multipliers"
  input: "global/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/one_hot/on_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/one_hot/off_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/one_hot/depth"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "global/one_hot"
  op: "OneHot"
  input: "global/actions"
  input: "global/one_hot/depth"
  input: "global/one_hot/on_value"
  input: "global/one_hot/off_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "global/mul_3"
  op: "Mul"
  input: "global/one_hot"
  input: "global/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "global/ExpandDims_3"
  op: "ExpandDims"
  input: "global/mul_2"
  input: "global/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/mul_4"
  op: "Mul"
  input: "global/mul_3"
  input: "global/ExpandDims_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/Sum"
  op: "Sum"
  input: "global/mul_4"
  input: "global/Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/Mean/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/Mean"
  op: "Mean"
  input: "global/Sum"
  input: "global/Mean/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/Neg"
  op: "Neg"
  input: "global/Mean"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/mul_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "global/mul_5"
  op: "Mul"
  input: "global/Neg"
  input: "global/mul_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/Sum_1/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/Sum_1"
  op: "Sum"
  input: "global/mul_3"
  input: "global/Sum_1/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/mul_6"
  op: "Mul"
  input: "global/one_hot"
  input: "global/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/Sum_2/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/Sum_2"
  op: "Sum"
  input: "global/mul_6"
  input: "global/Sum_2/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/mul_7"
  op: "Mul"
  input: "global/mul"
  input: "global/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/Sum_3/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/Sum_3"
  op: "Sum"
  input: "global/mul_7"
  input: "global/Sum_3/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/Mean_1/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/Mean_1"
  op: "Mean"
  input: "global/Sum_3"
  input: "global/Mean_1/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/Neg_1"
  op: "Neg"
  input: "global/Mean_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/mul_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "global/mul_8"
  op: "Mul"
  input: "global/Neg_1"
  input: "global/mul_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/Neg_2"
  op: "Neg"
  input: "global/mul_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/offp_switch"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global/Shape_2"
  op: "Shape"
  input: "global/off_policy_targets"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/strided_slice_3/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice_3"
  op: "StridedSlice"
  input: "global/Shape_2"
  input: "global/strided_slice_3/stack"
  input: "global/strided_slice_3/stack_1"
  input: "global/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/Fill_2/dims/1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/Fill_2/dims"
  op: "Pack"
  input: "global/strided_slice_3"
  input: "global/Fill_2/dims/1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/Fill_2/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/Fill_2"
  op: "Fill"
  input: "global/Fill_2/dims"
  input: "global/Fill_2/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/strided_slice_4/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "global/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_4"
  op: "StridedSlice"
  input: "global/off_policy_targets"
  input: "global/strided_slice_4/stack"
  input: "global/strided_slice_4/stack_1"
  input: "global/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/concat_1"
  op: "ConcatV2"
  input: "global/Fill_2"
  input: "global/strided_slice_4"
  input: "global/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/Gather"
  op: "ResourceGather"
  input: "global/obs_embed/embeddings"
  input: "global/concat_1"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "global/Identity"
  op: "Identity"
  input: "global/Gather"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/range"
  op: "Range"
  input: "global/policy_2/rnn/range/start"
  input: "global/policy_2/rnn/Rank"
  input: "global/policy_2/rnn/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/concat/values_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/concat"
  op: "ConcatV2"
  input: "global/policy_2/rnn/concat/values_0"
  input: "global/policy_2/rnn/range"
  input: "global/policy_2/rnn/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/transpose"
  op: "Transpose"
  input: "global/Identity"
  input: "global/policy_2/rnn/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/sequence_length"
  op: "Identity"
  input: "global/off_policy_target_lengths"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Shape"
  op: "Shape"
  input: "global/policy_2/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice"
  op: "StridedSlice"
  input: "global/policy_2/rnn/Shape"
  input: "global/policy_2/rnn/strided_slice/stack"
  input: "global/policy_2/rnn/strided_slice/stack_1"
  input: "global/policy_2/rnn/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Shape_1"
  op: "Shape"
  input: "global/policy_2/rnn/sequence_length"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/stack"
  op: "Pack"
  input: "global/policy_2/rnn/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/policy_2/rnn/Equal"
  op: "Equal"
  input: "global/policy_2/rnn/Shape_1"
  input: "global/policy_2/rnn/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "global/policy_2/rnn/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/All"
  op: "All"
  input: "global/policy_2/rnn/Equal"
  input: "global/policy_2/rnn/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy_2/rnn/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor global/policy_2/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor global/policy_2/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Assert/Assert/data_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Assert/Assert"
  op: "Assert"
  input: "global/policy_2/rnn/All"
  input: "global/policy_2/rnn/Assert/Assert/data_0"
  input: "global/policy_2/rnn/stack"
  input: "global/policy_2/rnn/Assert/Assert/data_2"
  input: "global/policy_2/rnn/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "global/policy_2/rnn/CheckSeqLen"
  op: "Identity"
  input: "global/policy_2/rnn/sequence_length"
  input: "^global/policy_2/rnn/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Shape_2"
  op: "Shape"
  input: "global/policy_2/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "global/policy_2/rnn/Shape_2"
  input: "global/policy_2/rnn/strided_slice_1/stack"
  input: "global/policy_2/rnn/strided_slice_1/stack_1"
  input: "global/policy_2/rnn/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/policy_2/rnn/Shape_3"
  op: "Shape"
  input: "global/policy_2/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "global/policy_2/rnn/Shape_3"
  input: "global/policy_2/rnn/strided_slice_2/stack"
  input: "global/policy_2/rnn/strided_slice_2/stack_1"
  input: "global/policy_2/rnn/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/policy_2/rnn/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/ExpandDims"
  op: "ExpandDims"
  input: "global/policy_2/rnn/strided_slice_2"
  input: "global/policy_2/rnn/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/concat_1"
  op: "ConcatV2"
  input: "global/policy_2/rnn/ExpandDims"
  input: "global/policy_2/rnn/Const_1"
  input: "global/policy_2/rnn/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/zeros"
  op: "Fill"
  input: "global/policy_2/rnn/concat_1"
  input: "global/policy_2/rnn/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Min"
  op: "Min"
  input: "global/policy_2/rnn/CheckSeqLen"
  input: "global/policy_2/rnn/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy_2/rnn/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Max"
  op: "Max"
  input: "global/policy_2/rnn/CheckSeqLen"
  input: "global/policy_2/rnn/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy_2/rnn/time"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "global/policy_2/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "global/policy_2/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "global/policy_2/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "global/policy_2/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "global/policy_2/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "global/policy_2/rnn/TensorArrayUnstack/Shape"
  input: "global/policy_2/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "global/policy_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "global/policy_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "global/policy_2/rnn/TensorArrayUnstack/range/start"
  input: "global/policy_2/rnn/TensorArrayUnstack/strided_slice"
  input: "global/policy_2/rnn/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "global/policy_2/rnn/TensorArray_1"
  input: "global/policy_2/rnn/TensorArrayUnstack/range"
  input: "global/policy_2/rnn/transpose"
  input: "global/policy_2/rnn/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Maximum"
  op: "Maximum"
  input: "global/policy_2/rnn/Maximum/x"
  input: "global/policy_2/rnn/Max"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Minimum"
  op: "Minimum"
  input: "global/policy_2/rnn/strided_slice_1"
  input: "global/policy_2/rnn/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Enter"
  op: "Enter"
  input: "global/policy_2/rnn/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Enter_1"
  op: "Enter"
  input: "global/policy_2/rnn/time"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Enter_2"
  op: "Enter"
  input: "global/policy_2/rnn/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Enter_3"
  op: "Enter"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Enter_4"
  op: "Enter"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Enter_5"
  op: "Enter"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Enter_6"
  op: "Enter"
  input: "global/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Merge"
  op: "Merge"
  input: "global/policy_2/rnn/while/Enter"
  input: "global/policy_2/rnn/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Merge_1"
  op: "Merge"
  input: "global/policy_2/rnn/while/Enter_1"
  input: "global/policy_2/rnn/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Merge_2"
  op: "Merge"
  input: "global/policy_2/rnn/while/Enter_2"
  input: "global/policy_2/rnn/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Merge_3"
  op: "Merge"
  input: "global/policy_2/rnn/while/Enter_3"
  input: "global/policy_2/rnn/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Merge_4"
  op: "Merge"
  input: "global/policy_2/rnn/while/Enter_4"
  input: "global/policy_2/rnn/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Merge_5"
  op: "Merge"
  input: "global/policy_2/rnn/while/Enter_5"
  input: "global/policy_2/rnn/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Merge_6"
  op: "Merge"
  input: "global/policy_2/rnn/while/Enter_6"
  input: "global/policy_2/rnn/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Less"
  op: "Less"
  input: "global/policy_2/rnn/while/Merge"
  input: "global/policy_2/rnn/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Less/Enter"
  op: "Enter"
  input: "global/policy_2/rnn/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Less_1"
  op: "Less"
  input: "global/policy_2/rnn/while/Merge_1"
  input: "global/policy_2/rnn/while/Less_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "global/policy_2/rnn/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "global/policy_2/rnn/while/Less"
  input: "global/policy_2/rnn/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/LoopCond"
  op: "LoopCond"
  input: "global/policy_2/rnn/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Switch"
  op: "Switch"
  input: "global/policy_2/rnn/while/Merge"
  input: "global/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Switch_1"
  op: "Switch"
  input: "global/policy_2/rnn/while/Merge_1"
  input: "global/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Switch_2"
  op: "Switch"
  input: "global/policy_2/rnn/while/Merge_2"
  input: "global/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Switch_3"
  op: "Switch"
  input: "global/policy_2/rnn/while/Merge_3"
  input: "global/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Switch_4"
  op: "Switch"
  input: "global/policy_2/rnn/while/Merge_4"
  input: "global/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Switch_5"
  op: "Switch"
  input: "global/policy_2/rnn/while/Merge_5"
  input: "global/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Switch_6"
  op: "Switch"
  input: "global/policy_2/rnn/while/Merge_6"
  input: "global/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Identity"
  op: "Identity"
  input: "global/policy_2/rnn/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Identity_1"
  op: "Identity"
  input: "global/policy_2/rnn/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Identity_2"
  op: "Identity"
  input: "global/policy_2/rnn/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Identity_3"
  op: "Identity"
  input: "global/policy_2/rnn/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Identity_4"
  op: "Identity"
  input: "global/policy_2/rnn/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Identity_5"
  op: "Identity"
  input: "global/policy_2/rnn/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Identity_6"
  op: "Identity"
  input: "global/policy_2/rnn/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/add/y"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/add"
  op: "AddV2"
  input: "global/policy_2/rnn/while/Identity"
  input: "global/policy_2/rnn/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "global/policy_2/rnn/while/TensorArrayReadV3/Enter"
  input: "global/policy_2/rnn/while/Identity_1"
  input: "global/policy_2/rnn/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/policy_2/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "global/policy_2/rnn/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "global/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "global/policy_2/rnn/while/Identity_1"
  input: "global/policy_2/rnn/while/GreaterEqual/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "global/policy_2/rnn/CheckSeqLen"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "global/policy_2/rnn/while/TensorArrayReadV3"
  input: "global/policy_2/rnn/while/Identity_4"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_7"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "global/policy_2/rnn/while/Identity_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "global/policy_2/rnn/while/Identity_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_7"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "global/policy_2/rnn/while/Identity_5"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  op: "Add"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/LinearWrapper/MatMul"
  op: "MatMul"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "global/policy_2/rnn/while/LinearWrapper/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/policy_2/rnn/while/LinearWrapper/MatMul/Enter"
  op: "Enter"
  input: "global/policy/rnn/LinearWrapper/w_output/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Select"
  op: "Select"
  input: "global/policy_2/rnn/while/GreaterEqual"
  input: "global/policy_2/rnn/while/Select/Enter"
  input: "global/policy_2/rnn/while/LinearWrapper/MatMul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Select/Enter"
  op: "Enter"
  input: "global/policy_2/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Select_1"
  op: "Select"
  input: "global/policy_2/rnn/while/GreaterEqual"
  input: "global/policy_2/rnn/while/Identity_3"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Select_2"
  op: "Select"
  input: "global/policy_2/rnn/while/GreaterEqual"
  input: "global/policy_2/rnn/while/Identity_4"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Select_3"
  op: "Select"
  input: "global/policy_2/rnn/while/GreaterEqual"
  input: "global/policy_2/rnn/while/Identity_5"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Select_4"
  op: "Select"
  input: "global/policy_2/rnn/while/GreaterEqual"
  input: "global/policy_2/rnn/while/Identity_6"
  input: "global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "global/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "global/policy_2/rnn/while/Identity_1"
  input: "global/policy_2/rnn/while/Select"
  input: "global/policy_2/rnn/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "global/policy_2/rnn/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/policy_2/rnn/while/add_1/y"
  op: "Const"
  input: "^global/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/add_1"
  op: "AddV2"
  input: "global/policy_2/rnn/while/Identity_1"
  input: "global/policy_2/rnn/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/NextIteration"
  op: "NextIteration"
  input: "global/policy_2/rnn/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "global/policy_2/rnn/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "global/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "global/policy_2/rnn/while/Select_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "global/policy_2/rnn/while/Select_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "global/policy_2/rnn/while/Select_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "global/policy_2/rnn/while/Select_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Exit"
  op: "Exit"
  input: "global/policy_2/rnn/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Exit_1"
  op: "Exit"
  input: "global/policy_2/rnn/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Exit_2"
  op: "Exit"
  input: "global/policy_2/rnn/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Exit_3"
  op: "Exit"
  input: "global/policy_2/rnn/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Exit_4"
  op: "Exit"
  input: "global/policy_2/rnn/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Exit_5"
  op: "Exit"
  input: "global/policy_2/rnn/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/while/Exit_6"
  op: "Exit"
  input: "global/policy_2/rnn/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "global/policy_2/rnn/TensorArray"
  input: "global/policy_2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayStack/range"
  op: "Range"
  input: "global/policy_2/rnn/TensorArrayStack/range/start"
  input: "global/policy_2/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "global/policy_2/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "global/policy_2/rnn/TensorArray"
  input: "global/policy_2/rnn/TensorArrayStack/range"
  input: "global/policy_2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/Rank_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/range_1"
  op: "Range"
  input: "global/policy_2/rnn/range_1/start"
  input: "global/policy_2/rnn/Rank_1"
  input: "global/policy_2/rnn/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/concat_2/values_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/concat_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/concat_2"
  op: "ConcatV2"
  input: "global/policy_2/rnn/concat_2/values_0"
  input: "global/policy_2/rnn/range_1"
  input: "global/policy_2/rnn/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "global/policy_2/rnn/transpose_1"
  op: "Transpose"
  input: "global/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "global/policy_2/rnn/concat_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Shape"
  op: "Shape"
  input: "global/off_policy_targets"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Shape_1"
  op: "Shape"
  input: "global/off_policy_targets"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Shape_2"
  op: "Shape"
  input: "global/policy_2/rnn/transpose_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/topk_loss_per_logit/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/strided_slice"
  op: "StridedSlice"
  input: "global/topk_loss_per_logit/Shape_2"
  input: "global/topk_loss_per_logit/strided_slice/stack"
  input: "global/topk_loss_per_logit/strided_slice/stack_1"
  input: "global/topk_loss_per_logit/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Equal"
  op: "Equal"
  input: "global/topk_loss_per_logit/Shape_1"
  input: "global/topk_loss_per_logit/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/All"
  op: "All"
  input: "global/topk_loss_per_logit/assert_equal_1/Equal"
  input: "global/topk_loss_per_logit/assert_equal_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (global/topk_loss_per_logit/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Assert/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (global/topk_loss_per_logit/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (global/topk_loss_per_logit/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (global/topk_loss_per_logit/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  op: "Assert"
  input: "global/topk_loss_per_logit/assert_equal_1/All"
  input: "global/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_0"
  input: "global/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_1"
  input: "global/topk_loss_per_logit/Shape_1"
  input: "global/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_3"
  input: "global/topk_loss_per_logit/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Shape_3"
  op: "Shape"
  input: "global/policy_2/rnn/transpose_1"
  input: "^global/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Rank"
  op: "Const"
  input: "^global/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/sub/y"
  op: "Const"
  input: "^global/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/sub"
  op: "Sub"
  input: "global/topk_loss_per_logit/Rank"
  input: "global/topk_loss_per_logit/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/add/y"
  op: "Const"
  input: "^global/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/add"
  op: "AddV2"
  input: "global/topk_loss_per_logit/sub"
  input: "global/topk_loss_per_logit/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/strided_slice_1/stack"
  op: "Pack"
  input: "global/topk_loss_per_logit/sub"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/topk_loss_per_logit/strided_slice_1/stack_1"
  op: "Pack"
  input: "global/topk_loss_per_logit/add"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/topk_loss_per_logit/strided_slice_1/stack_2"
  op: "Const"
  input: "^global/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/strided_slice_1"
  op: "StridedSlice"
  input: "global/topk_loss_per_logit/Shape_3"
  input: "global/topk_loss_per_logit/strided_slice_1/stack"
  input: "global/topk_loss_per_logit/strided_slice_1/stack_1"
  input: "global/topk_loss_per_logit/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Reshape/shape/0"
  op: "Const"
  input: "^global/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Reshape/shape"
  op: "Pack"
  input: "global/topk_loss_per_logit/Reshape/shape/0"
  input: "global/topk_loss_per_logit/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Reshape"
  op: "Reshape"
  input: "global/policy_2/rnn/transpose_1"
  input: "global/topk_loss_per_logit/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Reshape_1/shape"
  op: "Const"
  input: "^global/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Reshape_1"
  op: "Reshape"
  input: "global/off_policy_targets"
  input: "global/topk_loss_per_logit/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/topk_loss_per_logit"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "global/topk_loss_per_logit/Reshape"
  input: "global/topk_loss_per_logit/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/topk_loss_per_logit/Reshape_2"
  op: "Reshape"
  input: "global/topk_loss_per_logit/topk_loss_per_logit"
  input: "global/topk_loss_per_logit/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/Sum_4/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/Sum_4"
  op: "Sum"
  input: "global/topk_loss_per_logit/Reshape_2"
  input: "global/Sum_4/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/Mean_2/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/Mean_2"
  op: "Mean"
  input: "global/Sum_4"
  input: "global/Mean_2/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/mul_9"
  op: "Mul"
  input: "global/Mean_2"
  input: "global/offp_switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/entropy_beta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "global/mul_10/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/mul_10"
  op: "Mul"
  input: "global/mul_5"
  input: "global/mul_10/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/mul_11"
  op: "Mul"
  input: "global/Neg_2"
  input: "global/entropy_beta"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/mul_12/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "global/mul_12"
  op: "Mul"
  input: "global/mul_12/x"
  input: "global/Mean_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/add"
  op: "AddV2"
  input: "global/mul_10"
  input: "global/mul_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/add_1"
  op: "AddV2"
  input: "global/add"
  input: "global/mul_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global/global_step"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/global_step"
    }
  }
}
node {
  name: "global/global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/global_step"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/global_step/Assign"
  op: "AssignVariableOp"
  input: "global/global_step"
  input: "global/global_step/Initializer/Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global/global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/global_step"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global/global_best_reward/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_best_reward"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: -10.0
      }
    }
  }
}
node {
  name: "global/global_best_reward"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_best_reward"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/global_best_reward"
    }
  }
}
node {
  name: "global/global_best_reward/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/global_best_reward"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/global_best_reward/Assign"
  op: "AssignVariableOp"
  input: "global/global_best_reward"
  input: "global/global_best_reward/Initializer/Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "global/global_best_reward/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/global_best_reward"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "global/is_best_model/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/is_best_model"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "global/is_best_model"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/is_best_model"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/is_best_model"
    }
  }
}
node {
  name: "global/is_best_model/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/is_best_model"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/is_best_model/Assign"
  op: "AssignVariableOp"
  input: "global/is_best_model"
  input: "global/is_best_model/Initializer/Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "global/is_best_model/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/is_best_model"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "global/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "global/AssignVariableOp"
  op: "AssignVariableOp"
  input: "global/is_best_model"
  input: "global/Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "global/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/is_best_model"
  input: "^global/AssignVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "global/global_best_reward_placeholder"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "global/global_best_reward"
  input: "global/global_best_reward_placeholder"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "global/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "global/global_best_reward"
  input: "^global/AssignVariableOp_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "global/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "global/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global/is_best_model"
  input: "global/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "global/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "global/is_best_model"
  input: "^global/AssignVariableOp_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "global/group_deps"
  op: "NoOp"
  input: "^global/AssignVariableOp_1"
  input: "^global/AssignVariableOp_2"
  device: "/device:CPU:0"
}
node {
  name: "global/run_number/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/run_number"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/run_number"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/run_number"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/run_number"
    }
  }
}
node {
  name: "global/run_number/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/run_number"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/run_number/Assign"
  op: "AssignVariableOp"
  input: "global/run_number"
  input: "global/run_number/Initializer/Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/run_number/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/run_number"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/program_count/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/program_count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global/program_count"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/program_count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global/program_count"
    }
  }
}
node {
  name: "global/program_count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/program_count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/program_count/Assign"
  op: "AssignVariableOp"
  input: "global/program_count"
  input: "global/program_count/Initializer/Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global/program_count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/program_count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "local/NoOp"
  op: "NoOp"
  device: "/device:CPU:0"
}
node {
  name: "local/learning_rate"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.999999873689376e-05
      }
    }
  }
}
node {
  name: "local/program_count_add_ph"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "local/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "global/program_count"
  input: "local/program_count_add_ph"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "local/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/program_count"
  input: "^local/AssignAddVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/obs_embed/embeddings/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/obs_embed/embeddings/Initializer/random_uniform/max"
  input: "local/obs_embed/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/obs_embed/embeddings/Initializer/random_uniform/RandomUniform"
  input: "local/obs_embed/embeddings/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Initializer/random_uniform"
  op: "Add"
  input: "local/obs_embed/embeddings/Initializer/random_uniform/mul"
  input: "local/obs_embed/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/obs_embed/embeddings"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/obs_embed/embeddings"
    }
  }
}
node {
  name: "local/obs_embed/embeddings/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Assign"
  op: "AssignVariableOp"
  input: "local/obs_embed/embeddings"
  input: "local/obs_embed/embeddings/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/obs_embed/embeddings/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/Fill/dims"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/Fill"
  op: "Fill"
  input: "local/Fill/dims"
  input: "local/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy/rnn/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_4"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_5"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_1"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_4"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_5"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy/rnn/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
          dim {
            size: 4
          }
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "local/policy/rnn/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/Gather"
  op: "ResourceGather"
  input: "local/obs_embed/embeddings"
  input: "local/Fill"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "local/policy/rnn/Identity"
  op: "Identity"
  input: "local/policy/rnn/Gather"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "local/policy/rnn/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/policy/rnn/rnn_output_0/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/rnn_output_0"
  op: "TensorArrayV3"
  input: "local/policy/rnn/rnn_output_0/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/policy/rnn/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "local/policy/rnn/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/concat"
  op: "ConcatV2"
  input: "local/policy/rnn/Const_1"
  input: "local/policy/rnn/Const_2"
  input: "local/policy/rnn/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/zeros_1"
  op: "Fill"
  input: "local/policy/rnn/concat"
  input: "local/policy/rnn/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter"
  op: "Enter"
  input: "local/policy/rnn/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_1"
  op: "Enter"
  input: "local/policy/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_2"
  op: "Enter"
  input: "local/policy/rnn/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_3"
  op: "Enter"
  input: "local/policy/rnn/rnn_output_0:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_4"
  op: "Enter"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_5"
  op: "Enter"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_6"
  op: "Enter"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_7"
  op: "Enter"
  input: "local/policy/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_8"
  op: "Enter"
  input: "local/policy/rnn/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_9"
  op: "Enter"
  input: "local/policy/rnn/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Enter_10"
  op: "Enter"
  input: "local/policy/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge"
  op: "Merge"
  input: "local/policy/rnn/while/Enter"
  input: "local/policy/rnn/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_1"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_1"
  input: "local/policy/rnn/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_2"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_2"
  input: "local/policy/rnn/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_3"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_3"
  input: "local/policy/rnn/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_4"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_4"
  input: "local/policy/rnn/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_5"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_5"
  input: "local/policy/rnn/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_6"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_6"
  input: "local/policy/rnn/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_7"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_7"
  input: "local/policy/rnn/while/NextIteration_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_8"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_8"
  input: "local/policy/rnn/while/NextIteration_8"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_9"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_9"
  input: "local/policy/rnn/while/NextIteration_9"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Merge_10"
  op: "Merge"
  input: "local/policy/rnn/while/Enter_10"
  input: "local/policy/rnn/while/NextIteration_10"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Const"
  op: "Const"
  input: "^local/policy/rnn/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/All"
  op: "All"
  input: "local/policy/rnn/while/Merge_1"
  input: "local/policy/rnn/while/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy/rnn/while/LogicalNot"
  op: "LogicalNot"
  input: "local/policy/rnn/while/All"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LoopCond"
  op: "LoopCond"
  input: "local/policy/rnn/while/LogicalNot"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch"
  op: "Switch"
  input: "local/policy/rnn/while/Merge"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_1"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_1"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_2"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_2"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_3"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_3"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_4"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_4"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_5"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_5"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_6"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_6"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_7"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_7"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_8"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_8"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_9"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_9"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Switch_10"
  op: "Switch"
  input: "local/policy/rnn/while/Merge_10"
  input: "local/policy/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/Merge_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity"
  op: "Identity"
  input: "local/policy/rnn/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_1"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_2"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_3"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_4"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_5"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_6"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_7"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_7:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_8"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_8:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_9"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_9:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_10"
  op: "Identity"
  input: "local/policy/rnn/while/Switch_10:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "A\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.15047095715999603
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15047095715999603
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 65
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  op: "Identity"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  op: "Identity"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "local/policy/rnn/while/Identity_2"
  input: "local/policy/rnn/while/Identity_5"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "local/policy/rnn/while/Identity_4"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Assign"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  op: "Identity"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Assign"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  op: "Identity"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "local/policy/rnn/while/Identity_7"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "local/policy/rnn/while/Identity_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.29277002811431885
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.29277002811431885
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/max"
  input: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/RandomUniform"
  input: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform"
  op: "Add"
  input: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/mul"
  input: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/policy/rnn/LinearWrapper/w_output"
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/policy/rnn/LinearWrapper/w_output"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Assign"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/w_output"
  input: "local/policy/rnn/LinearWrapper/w_output/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/w_output"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  op: "Identity"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/MatMul"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "local/policy/rnn/while/LinearWrapper/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/add/y"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/add"
  op: "AddV2"
  input: "local/policy/rnn/while/Identity"
  input: "local/policy/rnn/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/mul/y"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/mul"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/MatMul"
  input: "local/policy/rnn/while/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LogicalNot_1"
  op: "LogicalNot"
  input: "local/policy/rnn/while/Identity_10"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/multinomial/Multinomial/num_samples"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/multinomial/Multinomial"
  op: "Multinomial"
  input: "local/policy/rnn/while/mul"
  input: "local/policy/rnn/while/multinomial/Multinomial/num_samples"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/policy/rnn/while/strided_slice/stack"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/strided_slice/stack_1"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/strided_slice/stack_2"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/strided_slice"
  op: "StridedSlice"
  input: "local/policy/rnn/while/multinomial/Multinomial"
  input: "local/policy/rnn/while/strided_slice/stack"
  input: "local/policy/rnn/while/strided_slice/stack_1"
  input: "local/policy/rnn/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "local/policy/rnn/while/zeros"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 4
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Select"
  op: "Select"
  input: "local/policy/rnn/while/LogicalNot_1"
  input: "local/policy/rnn/while/strided_slice"
  input: "local/policy/rnn/while/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/ToInt32"
  op: "Cast"
  input: "local/policy/rnn/while/Select"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Equal/y"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Equal"
  op: "Equal"
  input: "local/policy/rnn/while/ToInt32"
  input: "local/policy/rnn/while/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "local/policy/rnn/while/GreaterEqual/y"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "local/policy/rnn/while/add"
  input: "local/policy/rnn/while/GreaterEqual/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LogicalOr"
  op: "LogicalOr"
  input: "local/policy/rnn/while/Equal"
  input: "local/policy/rnn/while/GreaterEqual"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/add_1/y"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/add_1"
  op: "AddV2"
  input: "local/policy/rnn/while/add"
  input: "local/policy/rnn/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/ExpandDims/dim"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/ExpandDims"
  op: "ExpandDims"
  input: "local/policy/rnn/while/add_1"
  input: "local/policy/rnn/while/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Tile/multiples"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Tile"
  op: "Tile"
  input: "local/policy/rnn/while/ExpandDims"
  input: "local/policy/rnn/while/Tile/multiples"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Select_1"
  op: "Select"
  input: "local/policy/rnn/while/LogicalOr"
  input: "local/policy/rnn/while/Identity_9"
  input: "local/policy/rnn/while/Tile"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Gather"
  op: "ResourceGather"
  input: "local/policy/rnn/while/Gather/Enter"
  input: "local/policy/rnn/while/ToInt32"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "local/policy/rnn/while/Gather/Enter"
  op: "Enter"
  input: "local/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Identity_11"
  op: "Identity"
  input: "local/policy/rnn/while/Gather"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/sub/y"
  op: "Const"
  input: "^local/policy/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/sub"
  op: "Sub"
  input: "local/policy/rnn/while/add"
  input: "local/policy/rnn/while/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "local/policy/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "local/policy/rnn/while/sub"
  input: "local/policy/rnn/while/ToInt32"
  input: "local/policy/rnn/while/Identity_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/ToInt32"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "local/policy/rnn/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/ToInt32"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LogicalOr_1"
  op: "LogicalOr"
  input: "local/policy/rnn/while/Identity_10"
  input: "local/policy/rnn/while/LogicalOr"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Select_2"
  op: "Select"
  input: "local/policy/rnn/while/Identity_1"
  input: "local/policy/rnn/while/Select_2/Enter"
  input: "local/policy/rnn/while/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Select_2/Enter"
  op: "Enter"
  input: "local/policy/rnn/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/Select_3"
  op: "Select"
  input: "local/policy/rnn/while/Identity_1"
  input: "local/policy/rnn/while/Identity_4"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Select_4"
  op: "Select"
  input: "local/policy/rnn/while/Identity_1"
  input: "local/policy/rnn/while/Identity_5"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Select_5"
  op: "Select"
  input: "local/policy/rnn/while/Identity_1"
  input: "local/policy/rnn/while/Identity_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Select_6"
  op: "Select"
  input: "local/policy/rnn/while/Identity_1"
  input: "local/policy/rnn/while/Identity_7"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "local/policy/rnn/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "local/policy/rnn/while/Identity"
  input: "local/policy/rnn/while/Select_2"
  input: "local/policy/rnn/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "local/policy/rnn/rnn_output_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LogicalOr_2"
  op: "LogicalOr"
  input: "local/policy/rnn/while/Identity_1"
  input: "local/policy/rnn/while/LogicalOr"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration"
  op: "NextIteration"
  input: "local/policy/rnn/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "local/policy/rnn/while/LogicalOr_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "local/policy/rnn/while/Identity_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "local/policy/rnn/while/TensorArrayWrite_1/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "local/policy/rnn/while/Select_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "local/policy/rnn/while/Select_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "local/policy/rnn/while/Select_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_7"
  op: "NextIteration"
  input: "local/policy/rnn/while/Select_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_8"
  op: "NextIteration"
  input: "local/policy/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_9"
  op: "NextIteration"
  input: "local/policy/rnn/while/Select_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/NextIteration_10"
  op: "NextIteration"
  input: "local/policy/rnn/while/LogicalOr_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit"
  op: "Exit"
  input: "local/policy/rnn/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_1"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_2"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_3"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_4"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_5"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_6"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_7"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_8"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_9"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/Exit_10"
  op: "Exit"
  input: "local/policy/rnn/while/Switch_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "local/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "local/policy/rnn/rnn_output_0"
  input: "local/policy/rnn/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/TensorArrayStack/range"
  op: "Range"
  input: "local/TensorArrayStack/range/start"
  input: "local/TensorArrayStack/TensorArraySizeV3"
  input: "local/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "local/policy/rnn/rnn_output_0"
  input: "local/TensorArrayStack/range"
  input: "local/policy/rnn/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/rnn_output_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 20
        }
      }
    }
  }
}
node {
  name: "local/policy_logits/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy_logits"
  op: "Transpose"
  input: "local/TensorArrayStack/TensorArrayGatherV3"
  input: "local/policy_logits/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "local/policy/rnn/TensorArray"
  input: "local/policy/rnn/while/Exit_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/TensorArrayStack_1/range"
  op: "Range"
  input: "local/TensorArrayStack_1/range/start"
  input: "local/TensorArrayStack_1/TensorArraySizeV3"
  input: "local/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "local/policy/rnn/TensorArray"
  input: "local/TensorArrayStack_1/range"
  input: "local/policy/rnn/while/Exit_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "local/sampled_tokens/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/sampled_tokens"
  op: "Transpose"
  input: "local/TensorArrayStack_1/TensorArrayGatherV3"
  input: "local/sampled_tokens/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/Softmax"
  op: "Softmax"
  input: "local/policy_logits"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/LogSoftmax"
  op: "LogSoftmax"
  input: "local/policy_logits"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/adjusted_lengths"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "local/policy_multipliers"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "local/empirical_values"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "local/off_policy_targets"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "local/off_policy_target_lengths"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "local/actions"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "local/Shape"
  op: "Shape"
  input: "local/actions"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice"
  op: "StridedSlice"
  input: "local/Shape"
  input: "local/strided_slice/stack"
  input: "local/strided_slice/stack_1"
  input: "local/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/Fill_1/dims/1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/Fill_1/dims"
  op: "Pack"
  input: "local/strided_slice"
  input: "local/Fill_1/dims/1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/Fill_1/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/Fill_1"
  op: "Fill"
  input: "local/Fill_1/dims"
  input: "local/Fill_1/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "local/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_1"
  op: "StridedSlice"
  input: "local/actions"
  input: "local/strided_slice_1/stack"
  input: "local/strided_slice_1/stack_1"
  input: "local/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/concat"
  op: "ConcatV2"
  input: "local/Fill_1"
  input: "local/strided_slice_1"
  input: "local/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/Gather"
  op: "ResourceGather"
  input: "local/obs_embed/embeddings"
  input: "local/concat"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "local/policy_1/Identity"
  op: "Identity"
  input: "local/policy_1/Gather"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/range"
  op: "Range"
  input: "local/policy_1/rnn/range/start"
  input: "local/policy_1/rnn/Rank"
  input: "local/policy_1/rnn/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/concat/values_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/concat"
  op: "ConcatV2"
  input: "local/policy_1/rnn/concat/values_0"
  input: "local/policy_1/rnn/range"
  input: "local/policy_1/rnn/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/transpose"
  op: "Transpose"
  input: "local/policy_1/Identity"
  input: "local/policy_1/rnn/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/sequence_length"
  op: "Identity"
  input: "local/adjusted_lengths"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Shape"
  op: "Shape"
  input: "local/policy_1/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice"
  op: "StridedSlice"
  input: "local/policy_1/rnn/Shape"
  input: "local/policy_1/rnn/strided_slice/stack"
  input: "local/policy_1/rnn/strided_slice/stack_1"
  input: "local/policy_1/rnn/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Shape_1"
  op: "Shape"
  input: "local/policy_1/rnn/sequence_length"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/stack"
  op: "Pack"
  input: "local/policy_1/rnn/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/policy_1/rnn/Equal"
  op: "Equal"
  input: "local/policy_1/rnn/Shape_1"
  input: "local/policy_1/rnn/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "local/policy_1/rnn/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/All"
  op: "All"
  input: "local/policy_1/rnn/Equal"
  input: "local/policy_1/rnn/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy_1/rnn/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor local/policy_1/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor local/policy_1/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Assert/Assert/data_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Assert/Assert"
  op: "Assert"
  input: "local/policy_1/rnn/All"
  input: "local/policy_1/rnn/Assert/Assert/data_0"
  input: "local/policy_1/rnn/stack"
  input: "local/policy_1/rnn/Assert/Assert/data_2"
  input: "local/policy_1/rnn/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "local/policy_1/rnn/CheckSeqLen"
  op: "Identity"
  input: "local/policy_1/rnn/sequence_length"
  input: "^local/policy_1/rnn/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Shape_2"
  op: "Shape"
  input: "local/policy_1/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "local/policy_1/rnn/Shape_2"
  input: "local/policy_1/rnn/strided_slice_1/stack"
  input: "local/policy_1/rnn/strided_slice_1/stack_1"
  input: "local/policy_1/rnn/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/policy_1/rnn/Shape_3"
  op: "Shape"
  input: "local/policy_1/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "local/policy_1/rnn/Shape_3"
  input: "local/policy_1/rnn/strided_slice_2/stack"
  input: "local/policy_1/rnn/strided_slice_2/stack_1"
  input: "local/policy_1/rnn/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/policy_1/rnn/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/ExpandDims"
  op: "ExpandDims"
  input: "local/policy_1/rnn/strided_slice_2"
  input: "local/policy_1/rnn/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/concat_1"
  op: "ConcatV2"
  input: "local/policy_1/rnn/ExpandDims"
  input: "local/policy_1/rnn/Const_1"
  input: "local/policy_1/rnn/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/zeros"
  op: "Fill"
  input: "local/policy_1/rnn/concat_1"
  input: "local/policy_1/rnn/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Min"
  op: "Min"
  input: "local/policy_1/rnn/CheckSeqLen"
  input: "local/policy_1/rnn/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy_1/rnn/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Max"
  op: "Max"
  input: "local/policy_1/rnn/CheckSeqLen"
  input: "local/policy_1/rnn/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy_1/rnn/time"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "local/policy_1/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "local/policy_1/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "local/policy_1/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "local/policy_1/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "local/policy_1/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "local/policy_1/rnn/TensorArrayUnstack/Shape"
  input: "local/policy_1/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "local/policy_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "local/policy_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "local/policy_1/rnn/TensorArrayUnstack/range/start"
  input: "local/policy_1/rnn/TensorArrayUnstack/strided_slice"
  input: "local/policy_1/rnn/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "local/policy_1/rnn/TensorArray_1"
  input: "local/policy_1/rnn/TensorArrayUnstack/range"
  input: "local/policy_1/rnn/transpose"
  input: "local/policy_1/rnn/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Maximum"
  op: "Maximum"
  input: "local/policy_1/rnn/Maximum/x"
  input: "local/policy_1/rnn/Max"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Minimum"
  op: "Minimum"
  input: "local/policy_1/rnn/strided_slice_1"
  input: "local/policy_1/rnn/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Enter_1"
  op: "Enter"
  input: "local/policy_1/rnn/time"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Enter_2"
  op: "Enter"
  input: "local/policy_1/rnn/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Enter_3"
  op: "Enter"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Enter_4"
  op: "Enter"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Enter_5"
  op: "Enter"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Enter_6"
  op: "Enter"
  input: "local/policy_1/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Merge"
  op: "Merge"
  input: "local/policy_1/rnn/while/Enter"
  input: "local/policy_1/rnn/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Merge_1"
  op: "Merge"
  input: "local/policy_1/rnn/while/Enter_1"
  input: "local/policy_1/rnn/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Merge_2"
  op: "Merge"
  input: "local/policy_1/rnn/while/Enter_2"
  input: "local/policy_1/rnn/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Merge_3"
  op: "Merge"
  input: "local/policy_1/rnn/while/Enter_3"
  input: "local/policy_1/rnn/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Merge_4"
  op: "Merge"
  input: "local/policy_1/rnn/while/Enter_4"
  input: "local/policy_1/rnn/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Merge_5"
  op: "Merge"
  input: "local/policy_1/rnn/while/Enter_5"
  input: "local/policy_1/rnn/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Merge_6"
  op: "Merge"
  input: "local/policy_1/rnn/while/Enter_6"
  input: "local/policy_1/rnn/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Less"
  op: "Less"
  input: "local/policy_1/rnn/while/Merge"
  input: "local/policy_1/rnn/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Less/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Less_1"
  op: "Less"
  input: "local/policy_1/rnn/while/Merge_1"
  input: "local/policy_1/rnn/while/Less_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "local/policy_1/rnn/while/Less"
  input: "local/policy_1/rnn/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/LoopCond"
  op: "LoopCond"
  input: "local/policy_1/rnn/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Switch"
  op: "Switch"
  input: "local/policy_1/rnn/while/Merge"
  input: "local/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Switch_1"
  op: "Switch"
  input: "local/policy_1/rnn/while/Merge_1"
  input: "local/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Switch_2"
  op: "Switch"
  input: "local/policy_1/rnn/while/Merge_2"
  input: "local/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Switch_3"
  op: "Switch"
  input: "local/policy_1/rnn/while/Merge_3"
  input: "local/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Switch_4"
  op: "Switch"
  input: "local/policy_1/rnn/while/Merge_4"
  input: "local/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Switch_5"
  op: "Switch"
  input: "local/policy_1/rnn/while/Merge_5"
  input: "local/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Switch_6"
  op: "Switch"
  input: "local/policy_1/rnn/while/Merge_6"
  input: "local/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Identity"
  op: "Identity"
  input: "local/policy_1/rnn/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Identity_1"
  op: "Identity"
  input: "local/policy_1/rnn/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Identity_2"
  op: "Identity"
  input: "local/policy_1/rnn/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Identity_3"
  op: "Identity"
  input: "local/policy_1/rnn/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Identity_4"
  op: "Identity"
  input: "local/policy_1/rnn/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Identity_5"
  op: "Identity"
  input: "local/policy_1/rnn/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Identity_6"
  op: "Identity"
  input: "local/policy_1/rnn/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/add/y"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/add"
  op: "AddV2"
  input: "local/policy_1/rnn/while/Identity"
  input: "local/policy_1/rnn/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "local/policy_1/rnn/while/TensorArrayReadV3/Enter"
  input: "local/policy_1/rnn/while/Identity_1"
  input: "local/policy_1/rnn/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy_1/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "local/policy_1/rnn/while/Identity_1"
  input: "local/policy_1/rnn/while/GreaterEqual/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/CheckSeqLen"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "local/policy_1/rnn/while/TensorArrayReadV3"
  input: "local/policy_1/rnn/while/Identity_4"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_4"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "local/policy_1/rnn/while/Identity_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "local/policy_1/rnn/while/Identity_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_4"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "local/policy_1/rnn/while/Identity_5"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/LinearWrapper/MatMul"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "local/policy_1/rnn/while/LinearWrapper/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy_1/rnn/while/LinearWrapper/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Select"
  op: "Select"
  input: "local/policy_1/rnn/while/GreaterEqual"
  input: "local/policy_1/rnn/while/Select/Enter"
  input: "local/policy_1/rnn/while/LinearWrapper/MatMul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Select/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Select_1"
  op: "Select"
  input: "local/policy_1/rnn/while/GreaterEqual"
  input: "local/policy_1/rnn/while/Identity_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Select_2"
  op: "Select"
  input: "local/policy_1/rnn/while/GreaterEqual"
  input: "local/policy_1/rnn/while/Identity_4"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Select_3"
  op: "Select"
  input: "local/policy_1/rnn/while/GreaterEqual"
  input: "local/policy_1/rnn/while/Identity_5"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Select_4"
  op: "Select"
  input: "local/policy_1/rnn/while/GreaterEqual"
  input: "local/policy_1/rnn/while/Identity_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "local/policy_1/rnn/while/Identity_1"
  input: "local/policy_1/rnn/while/Select"
  input: "local/policy_1/rnn/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_1/rnn/while/add_1/y"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/add_1"
  op: "AddV2"
  input: "local/policy_1/rnn/while/Identity_1"
  input: "local/policy_1/rnn/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/NextIteration"
  op: "NextIteration"
  input: "local/policy_1/rnn/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "local/policy_1/rnn/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "local/policy_1/rnn/while/Select_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "local/policy_1/rnn/while/Select_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "local/policy_1/rnn/while/Select_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "local/policy_1/rnn/while/Select_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Exit"
  op: "Exit"
  input: "local/policy_1/rnn/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Exit_1"
  op: "Exit"
  input: "local/policy_1/rnn/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Exit_2"
  op: "Exit"
  input: "local/policy_1/rnn/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Exit_3"
  op: "Exit"
  input: "local/policy_1/rnn/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Exit_4"
  op: "Exit"
  input: "local/policy_1/rnn/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Exit_5"
  op: "Exit"
  input: "local/policy_1/rnn/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/while/Exit_6"
  op: "Exit"
  input: "local/policy_1/rnn/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "local/policy_1/rnn/TensorArray"
  input: "local/policy_1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayStack/range"
  op: "Range"
  input: "local/policy_1/rnn/TensorArrayStack/range/start"
  input: "local/policy_1/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "local/policy_1/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "local/policy_1/rnn/TensorArray"
  input: "local/policy_1/rnn/TensorArrayStack/range"
  input: "local/policy_1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/Rank_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/range_1"
  op: "Range"
  input: "local/policy_1/rnn/range_1/start"
  input: "local/policy_1/rnn/Rank_1"
  input: "local/policy_1/rnn/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/concat_2/values_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/concat_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/concat_2"
  op: "ConcatV2"
  input: "local/policy_1/rnn/concat_2/values_0"
  input: "local/policy_1/rnn/range_1"
  input: "local/policy_1/rnn/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_1/rnn/transpose_1"
  op: "Transpose"
  input: "local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "local/policy_1/rnn/concat_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/Softmax_1"
  op: "Softmax"
  input: "local/policy_1/rnn/transpose_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/LogSoftmax_1"
  op: "LogSoftmax"
  input: "local/policy_1/rnn/transpose_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/Shape_1"
  op: "Shape"
  input: "local/actions"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice_2"
  op: "StridedSlice"
  input: "local/Shape_1"
  input: "local/strided_slice_2/stack"
  input: "local/strided_slice_2/stack_1"
  input: "local/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/range"
  op: "Range"
  input: "local/range/start"
  input: "local/strided_slice_2"
  input: "local/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/ExpandDims"
  op: "ExpandDims"
  input: "local/range"
  input: "local/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/ExpandDims_1"
  op: "ExpandDims"
  input: "local/adjusted_lengths"
  input: "local/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/Less"
  op: "Less"
  input: "local/ExpandDims"
  input: "local/ExpandDims_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/Cast"
  op: "Cast"
  input: "local/Less"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/ExpandDims_2"
  op: "ExpandDims"
  input: "local/Cast"
  input: "local/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/mul"
  op: "Mul"
  input: "local/Softmax_1"
  input: "local/ExpandDims_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/mul_1"
  op: "Mul"
  input: "local/LogSoftmax_1"
  input: "local/ExpandDims_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/mul_2"
  op: "Mul"
  input: "local/policy_multipliers"
  input: "local/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/one_hot/on_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/one_hot/off_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/one_hot/depth"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "local/one_hot"
  op: "OneHot"
  input: "local/actions"
  input: "local/one_hot/depth"
  input: "local/one_hot/on_value"
  input: "local/one_hot/off_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "local/mul_3"
  op: "Mul"
  input: "local/one_hot"
  input: "local/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/ExpandDims_3"
  op: "ExpandDims"
  input: "local/mul_2"
  input: "local/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/mul_4"
  op: "Mul"
  input: "local/mul_3"
  input: "local/ExpandDims_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/Sum"
  op: "Sum"
  input: "local/mul_4"
  input: "local/Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/Mean/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/Mean"
  op: "Mean"
  input: "local/Sum"
  input: "local/Mean/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/Neg"
  op: "Neg"
  input: "local/Mean"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/mul_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "local/mul_5"
  op: "Mul"
  input: "local/Neg"
  input: "local/mul_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/Sum_1/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/Sum_1"
  op: "Sum"
  input: "local/mul_3"
  input: "local/Sum_1/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/mul_6"
  op: "Mul"
  input: "local/one_hot"
  input: "local/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/Sum_2/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/Sum_2"
  op: "Sum"
  input: "local/mul_6"
  input: "local/Sum_2/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/mul_7"
  op: "Mul"
  input: "local/mul"
  input: "local/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/Sum_3/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/Sum_3"
  op: "Sum"
  input: "local/mul_7"
  input: "local/Sum_3/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/Mean_1/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/Mean_1"
  op: "Mean"
  input: "local/Sum_3"
  input: "local/Mean_1/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/Neg_1"
  op: "Neg"
  input: "local/Mean_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/mul_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "local/mul_8"
  op: "Mul"
  input: "local/Neg_1"
  input: "local/mul_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/Neg_2"
  op: "Neg"
  input: "local/mul_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/offp_switch"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "local/Shape_2"
  op: "Shape"
  input: "local/off_policy_targets"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/strided_slice_3/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice_3"
  op: "StridedSlice"
  input: "local/Shape_2"
  input: "local/strided_slice_3/stack"
  input: "local/strided_slice_3/stack_1"
  input: "local/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/Fill_2/dims/1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/Fill_2/dims"
  op: "Pack"
  input: "local/strided_slice_3"
  input: "local/Fill_2/dims/1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/Fill_2/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/Fill_2"
  op: "Fill"
  input: "local/Fill_2/dims"
  input: "local/Fill_2/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/strided_slice_4/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "local/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_4"
  op: "StridedSlice"
  input: "local/off_policy_targets"
  input: "local/strided_slice_4/stack"
  input: "local/strided_slice_4/stack_1"
  input: "local/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/concat_1"
  op: "ConcatV2"
  input: "local/Fill_2"
  input: "local/strided_slice_4"
  input: "local/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/Gather"
  op: "ResourceGather"
  input: "local/obs_embed/embeddings"
  input: "local/concat_1"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "local/Identity"
  op: "Identity"
  input: "local/Gather"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Rank"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/range"
  op: "Range"
  input: "local/policy_2/rnn/range/start"
  input: "local/policy_2/rnn/Rank"
  input: "local/policy_2/rnn/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/concat/values_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/concat"
  op: "ConcatV2"
  input: "local/policy_2/rnn/concat/values_0"
  input: "local/policy_2/rnn/range"
  input: "local/policy_2/rnn/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/transpose"
  op: "Transpose"
  input: "local/Identity"
  input: "local/policy_2/rnn/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/sequence_length"
  op: "Identity"
  input: "local/off_policy_target_lengths"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Shape"
  op: "Shape"
  input: "local/policy_2/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice"
  op: "StridedSlice"
  input: "local/policy_2/rnn/Shape"
  input: "local/policy_2/rnn/strided_slice/stack"
  input: "local/policy_2/rnn/strided_slice/stack_1"
  input: "local/policy_2/rnn/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Shape_1"
  op: "Shape"
  input: "local/policy_2/rnn/sequence_length"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/stack"
  op: "Pack"
  input: "local/policy_2/rnn/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/policy_2/rnn/Equal"
  op: "Equal"
  input: "local/policy_2/rnn/Shape_1"
  input: "local/policy_2/rnn/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "local/policy_2/rnn/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/All"
  op: "All"
  input: "local/policy_2/rnn/Equal"
  input: "local/policy_2/rnn/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy_2/rnn/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor local/policy_2/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor local/policy_2/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Assert/Assert/data_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Assert/Assert"
  op: "Assert"
  input: "local/policy_2/rnn/All"
  input: "local/policy_2/rnn/Assert/Assert/data_0"
  input: "local/policy_2/rnn/stack"
  input: "local/policy_2/rnn/Assert/Assert/data_2"
  input: "local/policy_2/rnn/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "local/policy_2/rnn/CheckSeqLen"
  op: "Identity"
  input: "local/policy_2/rnn/sequence_length"
  input: "^local/policy_2/rnn/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Shape_2"
  op: "Shape"
  input: "local/policy_2/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "local/policy_2/rnn/Shape_2"
  input: "local/policy_2/rnn/strided_slice_1/stack"
  input: "local/policy_2/rnn/strided_slice_1/stack_1"
  input: "local/policy_2/rnn/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/policy_2/rnn/Shape_3"
  op: "Shape"
  input: "local/policy_2/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "local/policy_2/rnn/Shape_3"
  input: "local/policy_2/rnn/strided_slice_2/stack"
  input: "local/policy_2/rnn/strided_slice_2/stack_1"
  input: "local/policy_2/rnn/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/policy_2/rnn/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/ExpandDims"
  op: "ExpandDims"
  input: "local/policy_2/rnn/strided_slice_2"
  input: "local/policy_2/rnn/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/concat_1"
  op: "ConcatV2"
  input: "local/policy_2/rnn/ExpandDims"
  input: "local/policy_2/rnn/Const_1"
  input: "local/policy_2/rnn/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/zeros"
  op: "Fill"
  input: "local/policy_2/rnn/concat_1"
  input: "local/policy_2/rnn/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Min"
  op: "Min"
  input: "local/policy_2/rnn/CheckSeqLen"
  input: "local/policy_2/rnn/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy_2/rnn/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Max"
  op: "Max"
  input: "local/policy_2/rnn/CheckSeqLen"
  input: "local/policy_2/rnn/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy_2/rnn/time"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "local/policy_2/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "local/policy_2/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "local/policy_2/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "local/policy_2/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "local/policy_2/rnn/transpose"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "local/policy_2/rnn/TensorArrayUnstack/Shape"
  input: "local/policy_2/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "local/policy_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "local/policy_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "local/policy_2/rnn/TensorArrayUnstack/range/start"
  input: "local/policy_2/rnn/TensorArrayUnstack/strided_slice"
  input: "local/policy_2/rnn/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "local/policy_2/rnn/TensorArray_1"
  input: "local/policy_2/rnn/TensorArrayUnstack/range"
  input: "local/policy_2/rnn/transpose"
  input: "local/policy_2/rnn/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Maximum"
  op: "Maximum"
  input: "local/policy_2/rnn/Maximum/x"
  input: "local/policy_2/rnn/Max"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Minimum"
  op: "Minimum"
  input: "local/policy_2/rnn/strided_slice_1"
  input: "local/policy_2/rnn/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Enter_1"
  op: "Enter"
  input: "local/policy_2/rnn/time"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Enter_2"
  op: "Enter"
  input: "local/policy_2/rnn/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Enter_3"
  op: "Enter"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Enter_4"
  op: "Enter"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Enter_5"
  op: "Enter"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Enter_6"
  op: "Enter"
  input: "local/policy_2/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Merge"
  op: "Merge"
  input: "local/policy_2/rnn/while/Enter"
  input: "local/policy_2/rnn/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Merge_1"
  op: "Merge"
  input: "local/policy_2/rnn/while/Enter_1"
  input: "local/policy_2/rnn/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Merge_2"
  op: "Merge"
  input: "local/policy_2/rnn/while/Enter_2"
  input: "local/policy_2/rnn/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Merge_3"
  op: "Merge"
  input: "local/policy_2/rnn/while/Enter_3"
  input: "local/policy_2/rnn/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Merge_4"
  op: "Merge"
  input: "local/policy_2/rnn/while/Enter_4"
  input: "local/policy_2/rnn/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Merge_5"
  op: "Merge"
  input: "local/policy_2/rnn/while/Enter_5"
  input: "local/policy_2/rnn/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Merge_6"
  op: "Merge"
  input: "local/policy_2/rnn/while/Enter_6"
  input: "local/policy_2/rnn/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Less"
  op: "Less"
  input: "local/policy_2/rnn/while/Merge"
  input: "local/policy_2/rnn/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Less/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Less_1"
  op: "Less"
  input: "local/policy_2/rnn/while/Merge_1"
  input: "local/policy_2/rnn/while/Less_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "local/policy_2/rnn/while/Less"
  input: "local/policy_2/rnn/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/LoopCond"
  op: "LoopCond"
  input: "local/policy_2/rnn/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Switch"
  op: "Switch"
  input: "local/policy_2/rnn/while/Merge"
  input: "local/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Switch_1"
  op: "Switch"
  input: "local/policy_2/rnn/while/Merge_1"
  input: "local/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Switch_2"
  op: "Switch"
  input: "local/policy_2/rnn/while/Merge_2"
  input: "local/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Switch_3"
  op: "Switch"
  input: "local/policy_2/rnn/while/Merge_3"
  input: "local/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Switch_4"
  op: "Switch"
  input: "local/policy_2/rnn/while/Merge_4"
  input: "local/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Switch_5"
  op: "Switch"
  input: "local/policy_2/rnn/while/Merge_5"
  input: "local/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Switch_6"
  op: "Switch"
  input: "local/policy_2/rnn/while/Merge_6"
  input: "local/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Identity"
  op: "Identity"
  input: "local/policy_2/rnn/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Identity_1"
  op: "Identity"
  input: "local/policy_2/rnn/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Identity_2"
  op: "Identity"
  input: "local/policy_2/rnn/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Identity_3"
  op: "Identity"
  input: "local/policy_2/rnn/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Identity_4"
  op: "Identity"
  input: "local/policy_2/rnn/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Identity_5"
  op: "Identity"
  input: "local/policy_2/rnn/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Identity_6"
  op: "Identity"
  input: "local/policy_2/rnn/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/add/y"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/add"
  op: "AddV2"
  input: "local/policy_2/rnn/while/Identity"
  input: "local/policy_2/rnn/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "local/policy_2/rnn/while/TensorArrayReadV3/Enter"
  input: "local/policy_2/rnn/while/Identity_1"
  input: "local/policy_2/rnn/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/policy_2/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "local/policy_2/rnn/while/Identity_1"
  input: "local/policy_2/rnn/while/GreaterEqual/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/CheckSeqLen"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "local/policy_2/rnn/while/TensorArrayReadV3"
  input: "local/policy_2/rnn/while/Identity_4"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_7"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "local/policy_2/rnn/while/Identity_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "local/policy_2/rnn/while/Identity_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_7"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "local/policy_2/rnn/while/Identity_5"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  op: "Add"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/LinearWrapper/MatMul"
  op: "MatMul"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "local/policy_2/rnn/while/LinearWrapper/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/policy_2/rnn/while/LinearWrapper/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Select"
  op: "Select"
  input: "local/policy_2/rnn/while/GreaterEqual"
  input: "local/policy_2/rnn/while/Select/Enter"
  input: "local/policy_2/rnn/while/LinearWrapper/MatMul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Select/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Select_1"
  op: "Select"
  input: "local/policy_2/rnn/while/GreaterEqual"
  input: "local/policy_2/rnn/while/Identity_3"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Select_2"
  op: "Select"
  input: "local/policy_2/rnn/while/GreaterEqual"
  input: "local/policy_2/rnn/while/Identity_4"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Select_3"
  op: "Select"
  input: "local/policy_2/rnn/while/GreaterEqual"
  input: "local/policy_2/rnn/while/Identity_5"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Select_4"
  op: "Select"
  input: "local/policy_2/rnn/while/GreaterEqual"
  input: "local/policy_2/rnn/while/Identity_6"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "local/policy_2/rnn/while/Identity_1"
  input: "local/policy_2/rnn/while/Select"
  input: "local/policy_2/rnn/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/policy_2/rnn/while/add_1/y"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/add_1"
  op: "AddV2"
  input: "local/policy_2/rnn/while/Identity_1"
  input: "local/policy_2/rnn/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/NextIteration"
  op: "NextIteration"
  input: "local/policy_2/rnn/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "local/policy_2/rnn/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "local/policy_2/rnn/while/Select_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "local/policy_2/rnn/while/Select_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "local/policy_2/rnn/while/Select_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "local/policy_2/rnn/while/Select_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Exit"
  op: "Exit"
  input: "local/policy_2/rnn/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Exit_1"
  op: "Exit"
  input: "local/policy_2/rnn/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Exit_2"
  op: "Exit"
  input: "local/policy_2/rnn/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Exit_3"
  op: "Exit"
  input: "local/policy_2/rnn/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Exit_4"
  op: "Exit"
  input: "local/policy_2/rnn/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Exit_5"
  op: "Exit"
  input: "local/policy_2/rnn/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/while/Exit_6"
  op: "Exit"
  input: "local/policy_2/rnn/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "local/policy_2/rnn/TensorArray"
  input: "local/policy_2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayStack/range"
  op: "Range"
  input: "local/policy_2/rnn/TensorArrayStack/range/start"
  input: "local/policy_2/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "local/policy_2/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "local/policy_2/rnn/TensorArray"
  input: "local/policy_2/rnn/TensorArrayStack/range"
  input: "local/policy_2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/Rank_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/range_1/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/range_1/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/range_1"
  op: "Range"
  input: "local/policy_2/rnn/range_1/start"
  input: "local/policy_2/rnn/Rank_1"
  input: "local/policy_2/rnn/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/concat_2/values_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/concat_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/concat_2"
  op: "ConcatV2"
  input: "local/policy_2/rnn/concat_2/values_0"
  input: "local/policy_2/rnn/range_1"
  input: "local/policy_2/rnn/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/policy_2/rnn/transpose_1"
  op: "Transpose"
  input: "local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "local/policy_2/rnn/concat_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Shape"
  op: "Shape"
  input: "local/off_policy_targets"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Shape_1"
  op: "Shape"
  input: "local/off_policy_targets"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Shape_2"
  op: "Shape"
  input: "local/policy_2/rnn/transpose_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/topk_loss_per_logit/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/strided_slice"
  op: "StridedSlice"
  input: "local/topk_loss_per_logit/Shape_2"
  input: "local/topk_loss_per_logit/strided_slice/stack"
  input: "local/topk_loss_per_logit/strided_slice/stack_1"
  input: "local/topk_loss_per_logit/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Equal"
  op: "Equal"
  input: "local/topk_loss_per_logit/Shape_1"
  input: "local/topk_loss_per_logit/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/All"
  op: "All"
  input: "local/topk_loss_per_logit/assert_equal_1/Equal"
  input: "local/topk_loss_per_logit/assert_equal_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (local/topk_loss_per_logit/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Assert/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (local/topk_loss_per_logit/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (local/topk_loss_per_logit/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (local/topk_loss_per_logit/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  op: "Assert"
  input: "local/topk_loss_per_logit/assert_equal_1/All"
  input: "local/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_0"
  input: "local/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_1"
  input: "local/topk_loss_per_logit/Shape_1"
  input: "local/topk_loss_per_logit/assert_equal_1/Assert/Assert/data_3"
  input: "local/topk_loss_per_logit/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Shape_3"
  op: "Shape"
  input: "local/policy_2/rnn/transpose_1"
  input: "^local/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Rank"
  op: "Const"
  input: "^local/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/sub/y"
  op: "Const"
  input: "^local/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/sub"
  op: "Sub"
  input: "local/topk_loss_per_logit/Rank"
  input: "local/topk_loss_per_logit/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/add/y"
  op: "Const"
  input: "^local/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/add"
  op: "AddV2"
  input: "local/topk_loss_per_logit/sub"
  input: "local/topk_loss_per_logit/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/strided_slice_1/stack"
  op: "Pack"
  input: "local/topk_loss_per_logit/sub"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/topk_loss_per_logit/strided_slice_1/stack_1"
  op: "Pack"
  input: "local/topk_loss_per_logit/add"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/topk_loss_per_logit/strided_slice_1/stack_2"
  op: "Const"
  input: "^local/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/strided_slice_1"
  op: "StridedSlice"
  input: "local/topk_loss_per_logit/Shape_3"
  input: "local/topk_loss_per_logit/strided_slice_1/stack"
  input: "local/topk_loss_per_logit/strided_slice_1/stack_1"
  input: "local/topk_loss_per_logit/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Reshape/shape/0"
  op: "Const"
  input: "^local/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Reshape/shape"
  op: "Pack"
  input: "local/topk_loss_per_logit/Reshape/shape/0"
  input: "local/topk_loss_per_logit/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Reshape"
  op: "Reshape"
  input: "local/policy_2/rnn/transpose_1"
  input: "local/topk_loss_per_logit/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Reshape_1/shape"
  op: "Const"
  input: "^local/topk_loss_per_logit/assert_equal_1/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Reshape_1"
  op: "Reshape"
  input: "local/off_policy_targets"
  input: "local/topk_loss_per_logit/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/topk_loss_per_logit"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "local/topk_loss_per_logit/Reshape"
  input: "local/topk_loss_per_logit/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/topk_loss_per_logit/Reshape_2"
  op: "Reshape"
  input: "local/topk_loss_per_logit/topk_loss_per_logit"
  input: "local/topk_loss_per_logit/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/Sum_4/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/Sum_4"
  op: "Sum"
  input: "local/topk_loss_per_logit/Reshape_2"
  input: "local/Sum_4/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/Mean_2/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/Mean_2"
  op: "Mean"
  input: "local/Sum_4"
  input: "local/Mean_2/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/mul_9"
  op: "Mul"
  input: "local/Mean_2"
  input: "local/offp_switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/entropy_beta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "local/mul_10/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/mul_10"
  op: "Mul"
  input: "local/mul_5"
  input: "local/mul_10/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/mul_11"
  op: "Mul"
  input: "local/Neg_2"
  input: "local/entropy_beta"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/mul_12/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "local/mul_12"
  op: "Mul"
  input: "local/mul_12/x"
  input: "local/Mean_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/add"
  op: "AddV2"
  input: "local/mul_10"
  input: "local/mul_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/add_1"
  op: "AddV2"
  input: "local/add"
  input: "local/mul_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/grad_ys_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/gradients/Fill"
  op: "Fill"
  input: "local/gradients/Shape"
  input: "local/gradients/grad_ys_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/f_count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/f_count_1"
  op: "Enter"
  input: "local/gradients/f_count"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/Merge"
  op: "Merge"
  input: "local/gradients/f_count_1"
  input: "local/gradients/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Switch"
  op: "Switch"
  input: "local/gradients/Merge"
  input: "local/policy_2/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Add/y"
  op: "Const"
  input: "^local/policy_2/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/Add"
  op: "Add"
  input: "local/gradients/Switch:1"
  input: "local/gradients/Add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/NextIteration"
  op: "NextIteration"
  input: "local/gradients/Add"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/StackPushV2"
  input: "^local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPushV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/StackPushV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/StackPushV2"
  input: "^local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/f_count_2"
  op: "Exit"
  input: "local/gradients/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/b_count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/b_count_1"
  op: "Enter"
  input: "local/gradients/f_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/Merge_1"
  op: "Merge"
  input: "local/gradients/b_count_1"
  input: "local/gradients/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "local/gradients/Merge_1"
  input: "local/gradients/GreaterEqual/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "local/gradients/b_count"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/b_count_2"
  op: "LoopCond"
  input: "local/gradients/GreaterEqual"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Switch_1"
  op: "Switch"
  input: "local/gradients/Merge_1"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Sub"
  op: "Sub"
  input: "local/gradients/Switch_1:1"
  input: "local/gradients/GreaterEqual/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/NextIteration_1"
  op: "NextIteration"
  input: "local/gradients/Sub"
  input: "^local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/b_count_3"
  op: "Exit"
  input: "local/gradients/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/f_count_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/f_count_4"
  op: "Enter"
  input: "local/gradients/f_count_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/Merge_2"
  op: "Merge"
  input: "local/gradients/f_count_4"
  input: "local/gradients/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Switch_2"
  op: "Switch"
  input: "local/gradients/Merge_2"
  input: "local/policy_1/rnn/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Add_1/y"
  op: "Const"
  input: "^local/policy_1/rnn/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/Add_1"
  op: "Add"
  input: "local/gradients/Switch_2:1"
  input: "local/gradients/Add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/NextIteration_2"
  op: "NextIteration"
  input: "local/gradients/Add_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/StackPushV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPushV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/StackPushV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/StackPushV2"
  input: "^local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/f_count_5"
  op: "Exit"
  input: "local/gradients/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/b_count_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/b_count_5"
  op: "Enter"
  input: "local/gradients/f_count_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/Merge_3"
  op: "Merge"
  input: "local/gradients/b_count_5"
  input: "local/gradients/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "local/gradients/Merge_3"
  input: "local/gradients/GreaterEqual_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "local/gradients/b_count_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/b_count_6"
  op: "LoopCond"
  input: "local/gradients/GreaterEqual_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Switch_3"
  op: "Switch"
  input: "local/gradients/Merge_3"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/Sub_1"
  op: "Sub"
  input: "local/gradients/Switch_3:1"
  input: "local/gradients/GreaterEqual_1/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/NextIteration_3"
  op: "NextIteration"
  input: "local/gradients/Sub_1"
  input: "^local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/b_count_7"
  op: "Exit"
  input: "local/gradients/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_12_grad/Mul"
  op: "Mul"
  input: "local/gradients/Fill"
  input: "local/Mean_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_12_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/Fill"
  input: "local/mul_12/x"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_10_grad/Mul"
  op: "Mul"
  input: "local/gradients/Fill"
  input: "local/mul_10/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_10_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/Fill"
  input: "local/mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_11_grad/Mul"
  op: "Mul"
  input: "local/gradients/Fill"
  input: "local/entropy_beta"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_11_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/Fill"
  input: "local/Neg_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Shape"
  op: "Shape"
  input: "local/Sum_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/add"
  op: "AddV2"
  input: "local/Mean_2/reduction_indices"
  input: "local/gradients/local/Mean_2_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/Mean_2_grad/add"
  input: "local/gradients/local/Mean_2_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/range"
  op: "Range"
  input: "local/gradients/local/Mean_2_grad/range/start"
  input: "local/gradients/local/Mean_2_grad/Size"
  input: "local/gradients/local/Mean_2_grad/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Fill"
  op: "Fill"
  input: "local/gradients/local/Mean_2_grad/Shape_1"
  input: "local/gradients/local/Mean_2_grad/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "local/gradients/local/Mean_2_grad/range"
  input: "local/gradients/local/Mean_2_grad/mod"
  input: "local/gradients/local/Mean_2_grad/Shape"
  input: "local/gradients/local/Mean_2_grad/Fill"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Maximum"
  op: "Maximum"
  input: "local/gradients/local/Mean_2_grad/DynamicStitch"
  input: "local/gradients/local/Mean_2_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/floordiv"
  op: "FloorDiv"
  input: "local/gradients/local/Mean_2_grad/Shape"
  input: "local/gradients/local/Mean_2_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/mul_12_grad/Mul_1"
  input: "local/gradients/local/Mean_2_grad/DynamicStitch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Tile"
  op: "Tile"
  input: "local/gradients/local/Mean_2_grad/Reshape"
  input: "local/gradients/local/Mean_2_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Shape_2"
  op: "Shape"
  input: "local/Sum_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Shape_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Prod"
  op: "Prod"
  input: "local/gradients/local/Mean_2_grad/Shape_2"
  input: "local/gradients/local/Mean_2_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Prod_1"
  op: "Prod"
  input: "local/gradients/local/Mean_2_grad/Shape_3"
  input: "local/gradients/local/Mean_2_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Maximum_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Maximum_1"
  op: "Maximum"
  input: "local/gradients/local/Mean_2_grad/Prod_1"
  input: "local/gradients/local/Mean_2_grad/Maximum_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/floordiv_1"
  op: "FloorDiv"
  input: "local/gradients/local/Mean_2_grad/Prod"
  input: "local/gradients/local/Mean_2_grad/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/Cast"
  op: "Cast"
  input: "local/gradients/local/Mean_2_grad/floordiv_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "local/gradients/local/Mean_2_grad/Tile"
  input: "local/gradients/local/Mean_2_grad/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_5_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/mul_10_grad/Mul"
  input: "local/mul_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_5_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/mul_10_grad/Mul"
  input: "local/Neg"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Neg_2_grad/Neg"
  op: "Neg"
  input: "local/gradients/local/mul_11_grad/Mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Shape"
  op: "Shape"
  input: "local/topk_loss_per_logit/Reshape_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/add"
  op: "AddV2"
  input: "local/Sum_4/reduction_indices"
  input: "local/gradients/local/Sum_4_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/Sum_4_grad/add"
  input: "local/gradients/local/Sum_4_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/range"
  op: "Range"
  input: "local/gradients/local/Sum_4_grad/range/start"
  input: "local/gradients/local/Sum_4_grad/Size"
  input: "local/gradients/local/Sum_4_grad/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Fill"
  op: "Fill"
  input: "local/gradients/local/Sum_4_grad/Shape_1"
  input: "local/gradients/local/Sum_4_grad/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "local/gradients/local/Sum_4_grad/range"
  input: "local/gradients/local/Sum_4_grad/mod"
  input: "local/gradients/local/Sum_4_grad/Shape"
  input: "local/gradients/local/Sum_4_grad/Fill"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Maximum"
  op: "Maximum"
  input: "local/gradients/local/Sum_4_grad/DynamicStitch"
  input: "local/gradients/local/Sum_4_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/floordiv"
  op: "FloorDiv"
  input: "local/gradients/local/Sum_4_grad/Shape"
  input: "local/gradients/local/Sum_4_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/Mean_2_grad/truediv"
  input: "local/gradients/local/Sum_4_grad/DynamicStitch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_4_grad/Tile"
  op: "Tile"
  input: "local/gradients/local/Sum_4_grad/Reshape"
  input: "local/gradients/local/Sum_4_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Neg_grad/Neg"
  op: "Neg"
  input: "local/gradients/local/mul_5_grad/Mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_8_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/Neg_2_grad/Neg"
  input: "local/mul_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_8_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/Neg_2_grad/Neg"
  input: "local/Neg_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/topk_loss_per_logit/Reshape_2_grad/Shape"
  op: "Shape"
  input: "local/topk_loss_per_logit/topk_loss_per_logit"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/topk_loss_per_logit/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/Sum_4_grad/Tile"
  input: "local/gradients/local/topk_loss_per_logit/Reshape_2_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Shape"
  op: "Shape"
  input: "local/Sum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/add"
  op: "AddV2"
  input: "local/Mean/reduction_indices"
  input: "local/gradients/local/Mean_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/Mean_grad/add"
  input: "local/gradients/local/Mean_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/range"
  op: "Range"
  input: "local/gradients/local/Mean_grad/range/start"
  input: "local/gradients/local/Mean_grad/Size"
  input: "local/gradients/local/Mean_grad/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Fill"
  op: "Fill"
  input: "local/gradients/local/Mean_grad/Shape_1"
  input: "local/gradients/local/Mean_grad/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "local/gradients/local/Mean_grad/range"
  input: "local/gradients/local/Mean_grad/mod"
  input: "local/gradients/local/Mean_grad/Shape"
  input: "local/gradients/local/Mean_grad/Fill"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Maximum"
  op: "Maximum"
  input: "local/gradients/local/Mean_grad/DynamicStitch"
  input: "local/gradients/local/Mean_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "local/gradients/local/Mean_grad/Shape"
  input: "local/gradients/local/Mean_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/Neg_grad/Neg"
  input: "local/gradients/local/Mean_grad/DynamicStitch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Tile"
  op: "Tile"
  input: "local/gradients/local/Mean_grad/Reshape"
  input: "local/gradients/local/Mean_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Shape_2"
  op: "Shape"
  input: "local/Sum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Shape_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Prod"
  op: "Prod"
  input: "local/gradients/local/Mean_grad/Shape_2"
  input: "local/gradients/local/Mean_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Prod_1"
  op: "Prod"
  input: "local/gradients/local/Mean_grad/Shape_3"
  input: "local/gradients/local/Mean_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Maximum_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "local/gradients/local/Mean_grad/Prod_1"
  input: "local/gradients/local/Mean_grad/Maximum_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "local/gradients/local/Mean_grad/Prod"
  input: "local/gradients/local/Mean_grad/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/Cast"
  op: "Cast"
  input: "local/gradients/local/Mean_grad/floordiv_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_grad/truediv"
  op: "RealDiv"
  input: "local/gradients/local/Mean_grad/Tile"
  input: "local/gradients/local/Mean_grad/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Neg_1_grad/Neg"
  op: "Neg"
  input: "local/gradients/local/mul_8_grad/Mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like"
  op: "ZerosLike"
  input: "local/topk_loss_per_logit/topk_loss_per_logit:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/topk_loss_per_logit/topk_loss_per_logit_grad/PreventGradient"
  op: "PreventGradient"
  input: "local/topk_loss_per_logit/topk_loss_per_logit:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "local/gradients/local/topk_loss_per_logit/topk_loss_per_logit_grad/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/topk_loss_per_logit/topk_loss_per_logit_grad/ExpandDims"
  op: "ExpandDims"
  input: "local/gradients/local/topk_loss_per_logit/Reshape_2_grad/Reshape"
  input: "local/gradients/local/topk_loss_per_logit/topk_loss_per_logit_grad/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/topk_loss_per_logit/topk_loss_per_logit_grad/mul"
  op: "Mul"
  input: "local/gradients/local/topk_loss_per_logit/topk_loss_per_logit_grad/ExpandDims"
  input: "local/gradients/local/topk_loss_per_logit/topk_loss_per_logit_grad/PreventGradient"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Shape"
  op: "Shape"
  input: "local/mul_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/add"
  op: "AddV2"
  input: "local/Sum/reduction_indices"
  input: "local/gradients/local/Sum_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/Sum_grad/add"
  input: "local/gradients/local/Sum_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/range"
  op: "Range"
  input: "local/gradients/local/Sum_grad/range/start"
  input: "local/gradients/local/Sum_grad/Size"
  input: "local/gradients/local/Sum_grad/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Fill"
  op: "Fill"
  input: "local/gradients/local/Sum_grad/Shape_1"
  input: "local/gradients/local/Sum_grad/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "local/gradients/local/Sum_grad/range"
  input: "local/gradients/local/Sum_grad/mod"
  input: "local/gradients/local/Sum_grad/Shape"
  input: "local/gradients/local/Sum_grad/Fill"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Maximum"
  op: "Maximum"
  input: "local/gradients/local/Sum_grad/DynamicStitch"
  input: "local/gradients/local/Sum_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "local/gradients/local/Sum_grad/Shape"
  input: "local/gradients/local/Sum_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/Mean_grad/truediv"
  input: "local/gradients/local/Sum_grad/DynamicStitch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_grad/Tile"
  op: "Tile"
  input: "local/gradients/local/Sum_grad/Reshape"
  input: "local/gradients/local/Sum_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Shape"
  op: "Shape"
  input: "local/Sum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/add"
  op: "AddV2"
  input: "local/Mean_1/reduction_indices"
  input: "local/gradients/local/Mean_1_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/Mean_1_grad/add"
  input: "local/gradients/local/Mean_1_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/range"
  op: "Range"
  input: "local/gradients/local/Mean_1_grad/range/start"
  input: "local/gradients/local/Mean_1_grad/Size"
  input: "local/gradients/local/Mean_1_grad/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Fill"
  op: "Fill"
  input: "local/gradients/local/Mean_1_grad/Shape_1"
  input: "local/gradients/local/Mean_1_grad/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "local/gradients/local/Mean_1_grad/range"
  input: "local/gradients/local/Mean_1_grad/mod"
  input: "local/gradients/local/Mean_1_grad/Shape"
  input: "local/gradients/local/Mean_1_grad/Fill"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "local/gradients/local/Mean_1_grad/DynamicStitch"
  input: "local/gradients/local/Mean_1_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "local/gradients/local/Mean_1_grad/Shape"
  input: "local/gradients/local/Mean_1_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Mean_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/Neg_1_grad/Neg"
  input: "local/gradients/local/Mean_1_grad/DynamicStitch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Tile"
  op: "Tile"
  input: "local/gradients/local/Mean_1_grad/Reshape"
  input: "local/gradients/local/Mean_1_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Shape_2"
  op: "Shape"
  input: "local/Sum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Shape_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Prod"
  op: "Prod"
  input: "local/gradients/local/Mean_1_grad/Shape_2"
  input: "local/gradients/local/Mean_1_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "local/gradients/local/Mean_1_grad/Shape_3"
  input: "local/gradients/local/Mean_1_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Maximum_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Maximum_1"
  op: "Maximum"
  input: "local/gradients/local/Mean_1_grad/Prod_1"
  input: "local/gradients/local/Mean_1_grad/Maximum_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/floordiv_1"
  op: "FloorDiv"
  input: "local/gradients/local/Mean_1_grad/Prod"
  input: "local/gradients/local/Mean_1_grad/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/Cast"
  op: "Cast"
  input: "local/gradients/local/Mean_1_grad/floordiv_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "local/gradients/local/Mean_1_grad/Tile"
  input: "local/gradients/local/Mean_1_grad/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/topk_loss_per_logit/Reshape_grad/Shape"
  op: "Shape"
  input: "local/policy_2/rnn/transpose_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/topk_loss_per_logit/Reshape_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/topk_loss_per_logit/topk_loss_per_logit_grad/mul"
  input: "local/gradients/local/topk_loss_per_logit/Reshape_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/Shape"
  op: "Shape"
  input: "local/mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/Shape_1"
  op: "Shape"
  input: "local/ExpandDims_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/mul_4_grad/Shape"
  input: "local/gradients/local/mul_4_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/Sum_grad/Tile"
  input: "local/ExpandDims_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/mul_4_grad/Mul"
  input: "local/gradients/local/mul_4_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/mul_4_grad/Sum"
  input: "local/gradients/local/mul_4_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/Mul_1"
  op: "Mul"
  input: "local/mul_3"
  input: "local/gradients/local/Sum_grad/Tile"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/mul_4_grad/Mul_1"
  input: "local/gradients/local/mul_4_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/mul_4_grad/Sum_1"
  input: "local/gradients/local/mul_4_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Shape"
  op: "Shape"
  input: "local/mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/add"
  op: "AddV2"
  input: "local/Sum_3/reduction_indices"
  input: "local/gradients/local/Sum_3_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/Sum_3_grad/add"
  input: "local/gradients/local/Sum_3_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/range"
  op: "Range"
  input: "local/gradients/local/Sum_3_grad/range/start"
  input: "local/gradients/local/Sum_3_grad/Size"
  input: "local/gradients/local/Sum_3_grad/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Fill"
  op: "Fill"
  input: "local/gradients/local/Sum_3_grad/Shape_1"
  input: "local/gradients/local/Sum_3_grad/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "local/gradients/local/Sum_3_grad/range"
  input: "local/gradients/local/Sum_3_grad/mod"
  input: "local/gradients/local/Sum_3_grad/Shape"
  input: "local/gradients/local/Sum_3_grad/Fill"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Maximum"
  op: "Maximum"
  input: "local/gradients/local/Sum_3_grad/DynamicStitch"
  input: "local/gradients/local/Sum_3_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/floordiv"
  op: "FloorDiv"
  input: "local/gradients/local/Sum_3_grad/Shape"
  input: "local/gradients/local/Sum_3_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/Mean_1_grad/truediv"
  input: "local/gradients/local/Sum_3_grad/DynamicStitch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Sum_3_grad/Tile"
  op: "Tile"
  input: "local/gradients/local/Sum_3_grad/Reshape"
  input: "local/gradients/local/Sum_3_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/policy_2/rnn/concat_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "local/gradients/local/topk_loss_per_logit/Reshape_grad/Reshape"
  input: "local/gradients/local/policy_2/rnn/transpose_1_grad/InvertPermutation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/Shape"
  op: "Shape"
  input: "local/one_hot"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/Shape_1"
  op: "Shape"
  input: "local/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/mul_3_grad/Shape"
  input: "local/gradients/local/mul_3_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/mul_4_grad/Reshape"
  input: "local/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/mul_3_grad/Mul"
  input: "local/gradients/local/mul_3_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/mul_3_grad/Sum"
  input: "local/gradients/local/mul_3_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/Mul_1"
  op: "Mul"
  input: "local/one_hot"
  input: "local/gradients/local/mul_4_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/mul_3_grad/Mul_1"
  input: "local/gradients/local/mul_3_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/mul_3_grad/Sum_1"
  input: "local/gradients/local/mul_3_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/Shape"
  op: "Shape"
  input: "local/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/Shape_1"
  op: "Shape"
  input: "local/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/mul_7_grad/Shape"
  input: "local/gradients/local/mul_7_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/Sum_3_grad/Tile"
  input: "local/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/mul_7_grad/Mul"
  input: "local/gradients/local/mul_7_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/mul_7_grad/Sum"
  input: "local/gradients/local/mul_7_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/Mul_1"
  op: "Mul"
  input: "local/mul"
  input: "local/gradients/local/Sum_3_grad/Tile"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/mul_7_grad/Mul_1"
  input: "local/gradients/local/mul_7_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/mul_7_grad/Sum_1"
  input: "local/gradients/local/mul_7_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/policy_2/rnn/TensorArray"
  input: "local/policy_2/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "local/gradients"
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/policy_2/rnn/while/Exit_2"
  input: "^local/gradients/local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "local/gradients/local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/policy_2/rnn/TensorArrayStack/range"
  input: "local/gradients/local/policy_2/rnn/transpose_1_grad/transpose"
  input: "local/gradients/local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "local/policy_2/rnn/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "local/policy_2/rnn/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "local/policy_2/rnn/while/Exit_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "local/policy_2/rnn/while/Exit_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/Shape"
  op: "Shape"
  input: "local/Softmax_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/Shape_1"
  op: "Shape"
  input: "local/ExpandDims_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/mul_grad/Shape"
  input: "local/gradients/local/mul_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/mul_7_grad/Reshape"
  input: "local/ExpandDims_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/mul_grad/Mul"
  input: "local/gradients/local/mul_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/mul_grad/Sum"
  input: "local/gradients/local/mul_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/Mul_1"
  op: "Mul"
  input: "local/Softmax_1"
  input: "local/gradients/local/mul_7_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/mul_grad/Mul_1"
  input: "local/gradients/local/mul_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/mul_grad/Sum_1"
  input: "local/gradients/local/mul_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN"
  op: "AddN"
  input: "local/gradients/local/mul_3_grad/Reshape_1"
  input: "local/gradients/local/mul_7_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/mul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/Shape"
  op: "Shape"
  input: "local/LogSoftmax_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/Shape_1"
  op: "Shape"
  input: "local/ExpandDims_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/mul_1_grad/Shape"
  input: "local/gradients/local/mul_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/Mul"
  op: "Mul"
  input: "local/gradients/AddN"
  input: "local/ExpandDims_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/mul_1_grad/Mul"
  input: "local/gradients/local/mul_1_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/mul_1_grad/Sum"
  input: "local/gradients/local/mul_1_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/Mul_1"
  op: "Mul"
  input: "local/LogSoftmax_1"
  input: "local/gradients/AddN"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/mul_1_grad/Mul_1"
  input: "local/gradients/local/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/mul_1_grad/Sum_1"
  input: "local/gradients/local/mul_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "local/gradients/zeros_like_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "local/gradients/zeros_like_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "local/gradients/zeros_like_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "local/gradients/zeros_like_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/Softmax_1_grad/mul"
  op: "Mul"
  input: "local/gradients/local/mul_grad/Reshape"
  input: "local/Softmax_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Softmax_1_grad/Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/Softmax_1_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/Softmax_1_grad/mul"
  input: "local/gradients/local/Softmax_1_grad/Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "local/gradients/local/Softmax_1_grad/sub"
  op: "Sub"
  input: "local/gradients/local/mul_grad/Reshape"
  input: "local/gradients/local/Softmax_1_grad/Sum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Softmax_1_grad/mul_1"
  op: "Mul"
  input: "local/gradients/local/Softmax_1_grad/sub"
  input: "local/Softmax_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/LogSoftmax_1_grad/Exp"
  op: "Exp"
  input: "local/LogSoftmax_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/LogSoftmax_1_grad/Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/LogSoftmax_1_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/mul_1_grad/Reshape"
  input: "local/gradients/local/LogSoftmax_1_grad/Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "local/gradients/local/LogSoftmax_1_grad/mul"
  op: "Mul"
  input: "local/gradients/local/LogSoftmax_1_grad/Sum"
  input: "local/gradients/local/LogSoftmax_1_grad/Exp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/LogSoftmax_1_grad/sub"
  op: "Sub"
  input: "local/gradients/local/mul_1_grad/Reshape"
  input: "local/gradients/local/LogSoftmax_1_grad/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_2/rnn/while/Exit_2_grad/b_exit"
  input: "local/gradients/local/policy_2/rnn/while/Switch_2_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_2/rnn/while/Exit_3_grad/b_exit"
  input: "local/gradients/local/policy_2/rnn/while/Switch_3_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_2/rnn/while/Exit_4_grad/b_exit"
  input: "local/gradients/local/policy_2/rnn/while/Switch_4_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_2/rnn/while/Exit_5_grad/b_exit"
  input: "local/gradients/local/policy_2/rnn/while/Switch_5_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_2/rnn/while/Exit_6_grad/b_exit"
  input: "local/gradients/local/policy_2/rnn/while/Switch_6_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_1"
  op: "AddN"
  input: "local/gradients/local/Softmax_1_grad/mul_1"
  input: "local/gradients/local/LogSoftmax_1_grad/sub"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/Softmax_1_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/policy_1/rnn/concat_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "local/gradients/AddN_1"
  input: "local/gradients/local/policy_1/rnn/transpose_1_grad/InvertPermutation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_2/rnn/while/Switch_2_grad/b_switch"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_2/rnn/while/Switch_3_grad/b_switch"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_2/rnn/while/Switch_4_grad/b_switch"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_2/rnn/while/Switch_5_grad/b_switch"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_2/rnn/while/Switch_6_grad/b_switch"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/policy_1/rnn/TensorArray"
  input: "local/policy_1/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "local/gradients"
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/policy_1/rnn/while/Exit_2"
  input: "^local/gradients/local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "local/gradients/local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/policy_1/rnn/TensorArrayStack/range"
  input: "local/gradients/local/policy_1/rnn/transpose_1_grad/transpose"
  input: "local/gradients/local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "local/policy_1/rnn/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "local/policy_1/rnn/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "local/policy_1/rnn/while/Exit_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "local/policy_1/rnn/while/Exit_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_2/rnn/while/Merge_2_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_2/rnn/while/Merge_3_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_2/rnn/while/Merge_4_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_2/rnn/while/Merge_5_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_2/rnn/while/Merge_6_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "local/gradients/zeros_like_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "local/gradients/zeros_like_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "local/gradients/zeros_like_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "local/gradients/zeros_like_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "local/gradients/local/policy_2/rnn/while/Merge_2_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "local/gradients"
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/gradients/local/policy_2/rnn/while/Merge_2_grad/Switch:1"
  input: "^local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "local/policy_2/rnn/while/Identity_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2"
  input: "^local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  input: "^local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  input: "^local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  device: "/device:CPU:0"
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/Enter"
  input: "local/policy_2/rnn/while/Identity_3"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Merge_3_grad/Switch:1"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/Enter"
  input: "local/policy_2/rnn/while/GreaterEqual"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like"
  input: "local/gradients/local/policy_2/rnn/while/Merge_3_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/Enter"
  input: "local/policy_2/rnn/while/Identity_4"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Merge_4_grad/Switch:1"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_2_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like"
  input: "local/gradients/local/policy_2/rnn/while/Merge_4_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/Enter"
  input: "local/policy_2/rnn/while/Identity_5"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Merge_5_grad/Switch:1"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_3_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like"
  input: "local/gradients/local/policy_2/rnn/while/Merge_5_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/Enter"
  input: "local/policy_2/rnn/while/Identity_6"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Merge_6_grad/Switch:1"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_4_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like"
  input: "local/gradients/local/policy_2/rnn/while/Merge_6_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_1/rnn/while/Exit_2_grad/b_exit"
  input: "local/gradients/local/policy_1/rnn/while/Switch_2_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_1/rnn/while/Exit_3_grad/b_exit"
  input: "local/gradients/local/policy_1/rnn/while/Switch_3_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_1/rnn/while/Exit_4_grad/b_exit"
  input: "local/gradients/local/policy_1/rnn/while/Switch_4_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_1/rnn/while/Exit_5_grad/b_exit"
  input: "local/gradients/local/policy_1/rnn/while/Switch_5_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "local/gradients/local/policy_1/rnn/while/Exit_6_grad/b_exit"
  input: "local/gradients/local/policy_1/rnn/while/Switch_6_grad_1/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_2/rnn/while/Select_grad/zeros_like/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "local/gradients/local/policy_2/rnn/while/Select_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_grad/zeros_like"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_1/rnn/while/Switch_2_grad/b_switch"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_1/rnn/while/Switch_3_grad/b_switch"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_1/rnn/while/Switch_4_grad/b_switch"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_1/rnn/while/Switch_5_grad/b_switch"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_1/rnn/while/Switch_6_grad/b_switch"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul"
  op: "MatMul"
  input: "local/gradients/local/policy_2/rnn/while/Select_grad/Select_1"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_grad/Select_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy_2/rnn/while/Merge_2_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_1/rnn/while/Merge_2_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_1/rnn/while/Merge_3_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_1/rnn/while/Merge_4_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_1/rnn/while/Merge_5_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "local/gradients/local/policy_1/rnn/while/Merge_6_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_2"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/Select_1"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Select_4_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul"
  op: "Mul"
  input: "local/gradients/AddN_2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2"
  input: "local/gradients/AddN_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/Switch:1"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul_grad/MatMul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "local/gradients/local/policy_1/rnn/while/Merge_2_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "local/gradients"
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/gradients/local/policy_1/rnn/while/Merge_2_grad/Switch:1"
  input: "^local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/LinearWrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "local/policy_1/rnn/while/Identity_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2"
  input: "^local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  input: "^local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  input: "^local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  device: "/device:CPU:0"
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/Enter"
  input: "local/policy_1/rnn/while/Identity_3"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Merge_3_grad/Switch:1"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/Enter"
  input: "local/policy_1/rnn/while/GreaterEqual"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like"
  input: "local/gradients/local/policy_1/rnn/while/Merge_3_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/Enter"
  input: "local/policy_1/rnn/while/Identity_4"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Merge_4_grad/Switch:1"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_2_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like"
  input: "local/gradients/local/policy_1/rnn/while/Merge_4_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/Enter"
  input: "local/policy_1/rnn/while/Identity_5"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Merge_5_grad/Switch:1"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_3_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like"
  input: "local/gradients/local/policy_1/rnn/while/Merge_5_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/Enter"
  input: "local/policy_1/rnn/while/Identity_6"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Merge_6_grad/Switch:1"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_4_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like"
  input: "local/gradients/local/policy_1/rnn/while/Merge_6_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5_grad/TanhGrad"
  op: "TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "local/gradients/local/policy_1/rnn/while/Select_grad/zeros_like/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_grad/Select"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "local/gradients/local/policy_1/rnn/while/Select_grad/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_grad/zeros_like"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_3"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/Select_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5_grad/TanhGrad"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Select_3_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Sum"
  op: "Sum"
  input: "local/gradients/AddN_3"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/AddN_3"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul"
  op: "MatMul"
  input: "local/gradients/local/policy_1/rnn/while/Select_grad/Select_1"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_grad/Select_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy_1/rnn/while/Merge_2_grad/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Shape"
  op: "Shape"
  input: "local/policy_2/rnn/while/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Reshape_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_4"
  op: "AddN"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/Select_1"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Select_4_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul"
  op: "Mul"
  input: "local/gradients/AddN_4"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2"
  input: "local/gradients/AddN_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/Switch:1"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul_grad/MatMul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_5"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/Select_3_grad/Select"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Select_3_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4_grad/TanhGrad"
  op: "TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_6"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
  input: "local/gradients/local/policy_1/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/AddN_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_7"
  op: "AddN"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/Select_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3_grad/TanhGrad"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Select_3_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Sum"
  op: "Sum"
  input: "local/gradients/AddN_7"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/AddN_7"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2_grad/concat"
  op: "ConcatV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4_grad/TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4_grad/Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2_grad/concat/Const"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2_grad/concat/Const"
  op: "Const"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Shape"
  op: "Shape"
  input: "local/policy_1/rnn/while/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Reshape_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/gradients/AddN_8"
  op: "AddN"
  input: "local/gradients/local/policy_1/rnn/while/Select_3_grad/Select"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Select_3_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2_grad/concat"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_2_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/Switch:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2_grad/BiasAddGrad"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/AddN_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Const"
  op: "Const"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Rank"
  op: "Const"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Const"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Rank"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/mod"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Slice"
  op: "Slice"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ConcatOffset"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Slice_1"
  op: "Slice"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ConcatOffset:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/ShapeN:1"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/Switch:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2_grad/MatMul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2_grad/TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2_grad/Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1_grad/concat/Const"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/AddN_9"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/Select_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Slice"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul"
  op: "Mul"
  input: "local/gradients/AddN_9"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2"
  input: "local/gradients/AddN_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_10"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/Select_4_grad/Select"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2_grad/Slice_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Select_4_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5_grad/TanhGrad"
  op: "TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/AddN_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1_grad/concat"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/split_1_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_11"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5_grad/TanhGrad"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Sum"
  op: "Sum"
  input: "local/gradients/AddN_11"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/AddN_11"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Const"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Rank"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/mod"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/ShapeN:1"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/Switch:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1_grad/MatMul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_12"
  op: "AddN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Shape"
  op: "Shape"
  input: "local/policy_2/rnn/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Reshape_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_13"
  op: "AddN"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/Select_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Slice"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul"
  op: "Mul"
  input: "local/gradients/AddN_13"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2"
  input: "local/gradients/AddN_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_14"
  op: "AddN"
  input: "local/gradients/local/policy_1/rnn/while/Select_4_grad/Select"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1_grad/Slice_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Select_4_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_15"
  op: "AddN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_16"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/Select_1_grad/Select"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4_grad/TanhGrad"
  op: "TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/AddN_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/AddN_16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Shape"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Shape_1"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_17"
  op: "AddN"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3_grad/TanhGrad"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Sum"
  op: "Sum"
  input: "local/gradients/AddN_17"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/AddN_17"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2_grad/concat"
  op: "ConcatV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4_grad/TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4_grad/Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2_grad/concat/Const"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2_grad/concat/Const"
  op: "Const"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Shape"
  op: "Shape"
  input: "local/policy_1/rnn/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Reshape_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1"
  op: "Mul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/gradients/AddN_18"
  op: "AddN"
  input: "local/gradients/local/policy_1/rnn/while/Select_1_grad/Select"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Mul/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4_grad/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2_grad/concat"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_2_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/Switch:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2_grad/BiasAddGrad"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/AddN_18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Shape"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Shape_1"
  op: "Shape"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Shape"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Shape_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Sum"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Sum_1"
  op: "Sum"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Reshape_1"
  op: "Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Sum_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Const"
  op: "Const"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Rank"
  op: "Const"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Const"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Rank"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Shape"
  op: "Shape"
  input: "local/policy_2/rnn/while/TensorArrayReadV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/Enter"
  input: "local/policy_2/rnn/while/TensorArrayReadV3"
  input: "^local/gradients/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2/Enter"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/mod"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Slice"
  op: "Slice"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ConcatOffset"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Slice_1"
  op: "Slice"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ConcatOffset:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/ShapeN:1"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/Switch:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2_grad/MatMul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2_grad/TanhGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2_grad/Reshape"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5_grad/SigmoidGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1_grad/concat/Const"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^local/gradients/Sub"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "local/gradients"
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/policy_2/rnn/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Slice"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_19"
  op: "AddN"
  input: "local/gradients/local/policy_2/rnn/while/Select_2_grad/Select"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2_grad/Slice_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_2/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "local/gradients/b_count_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/AddN_19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1_grad/concat"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_1_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1_grad/BiasAddGrad"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/policy_2/rnn/TensorArray_1"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "local/gradients"
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/gradients/local/policy_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^local/gradients/local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_2/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "local/gradients/local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/policy_2/rnn/TensorArrayUnstack/range"
  input: "local/gradients/local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Const"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Rank"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "local/policy_1/rnn/while/TensorArrayReadV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/Enter"
  input: "local/policy_1/rnn/while/TensorArrayReadV3"
  input: "^local/gradients/Add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN/f_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/mod"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/ShapeN:1"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/Switch:1"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1_grad/MatMul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_20"
  op: "AddN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1/Enter_grad/b_acc_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/policy_2/rnn/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_2/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "local/gradients/local/policy_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "local/gradients/local/policy_2/rnn/transpose_grad/InvertPermutation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^local/gradients/Sub_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "local/gradients"
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/policy_1/rnn/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Slice"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_21"
  op: "AddN"
  input: "local/gradients/local/policy_1/rnn/while/Select_2_grad/Select"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1_grad/Slice_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_1/rnn/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/AddN_22"
  op: "AddN"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
  input: "local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1/Enter_grad/b_acc_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/gradients/local/policy_1/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "local/gradients/b_count_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "local/gradients/AddN_21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/Size"
  op: "Size"
  input: "local/concat_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "local/gradients/local/Gather_grad/Size"
  input: "local/gradients/local/Gather_grad/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "local/gradients/local/Gather_grad/Const"
  input: "local/gradients/local/Gather_grad/strided_slice/stack"
  input: "local/gradients/local/Gather_grad/strided_slice/stack_1"
  input: "local/gradients/local/Gather_grad/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/concat"
  op: "ConcatV2"
  input: "local/gradients/local/Gather_grad/ExpandDims"
  input: "local/gradients/local/Gather_grad/strided_slice"
  input: "local/gradients/local/Gather_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy_2/rnn/transpose_grad/transpose"
  input: "local/gradients/local/Gather_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "local/concat_1"
  input: "local/gradients/local/Gather_grad/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/policy_1/rnn/TensorArray_1"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "local/gradients"
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/gradients/local/policy_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^local/gradients/local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy_1/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "local/gradients/local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/policy_1/rnn/TensorArrayUnstack/range"
  input: "local/gradients/local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/policy_1/rnn/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "local/gradients/local/policy_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "local/gradients/local/policy_1/rnn/transpose_grad/InvertPermutation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/Size"
  op: "Size"
  input: "local/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "local/gradients/local/policy_1/Gather_grad/Size"
  input: "local/gradients/local/policy_1/Gather_grad/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "local/gradients/local/policy_1/Gather_grad/Const"
  input: "local/gradients/local/policy_1/Gather_grad/strided_slice/stack"
  input: "local/gradients/local/policy_1/Gather_grad/strided_slice/stack_1"
  input: "local/gradients/local/policy_1/Gather_grad/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/concat"
  op: "ConcatV2"
  input: "local/gradients/local/policy_1/Gather_grad/ExpandDims"
  input: "local/gradients/local/policy_1/Gather_grad/strided_slice"
  input: "local/gradients/local/policy_1/Gather_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/Reshape"
  op: "Reshape"
  input: "local/gradients/local/policy_1/rnn/transpose_grad/transpose"
  input: "local/gradients/local/policy_1/Gather_grad/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/local/policy_1/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "local/concat"
  input: "local/gradients/local/policy_1/Gather_grad/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/concat"
  op: "ConcatV2"
  input: "local/gradients/local/Gather_grad/Reshape"
  input: "local/gradients/local/policy_1/Gather_grad/Reshape"
  input: "local/gradients/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/gradients/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/gradients/concat_1"
  op: "ConcatV2"
  input: "local/gradients/local/Gather_grad/Reshape_1"
  input: "local/gradients/local/policy_1/Gather_grad/Reshape_1"
  input: "local/gradients/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/strided_slice_5/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/strided_slice_5/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice_5/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice_5"
  op: "StridedSlice"
  input: "local/gradients/local/Gather_grad/Const"
  input: "local/strided_slice_5/stack"
  input: "local/strided_slice_5/stack_1"
  input: "local/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "local/gradients/concat"
  input: "local/gradients/concat_1"
  input: "local/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/global_norm/L2Loss"
  op: "L2Loss"
  input: "local/gradients/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "local/gradients/AddN_22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "local/gradients/AddN_20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "local/gradients/AddN_15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "local/gradients/AddN_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "local/gradients/AddN_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global_norm/stack"
  op: "Pack"
  input: "local/global_norm/L2Loss"
  input: "local/global_norm/L2Loss_1"
  input: "local/global_norm/L2Loss_2"
  input: "local/global_norm/L2Loss_3"
  input: "local/global_norm/L2Loss_4"
  input: "local/global_norm/L2Loss_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/global_norm/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/global_norm/Sum"
  op: "Sum"
  input: "local/global_norm/stack"
  input: "local/global_norm/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/global_norm/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "local/global_norm/mul"
  op: "Mul"
  input: "local/global_norm/Sum"
  input: "local/global_norm/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global_norm/global_norm"
  op: "Sqrt"
  input: "local/global_norm/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/truediv/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "local/clip_by_global_norm/truediv/x"
  input: "local/global_norm/global_norm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "local/clip_by_global_norm/Const"
  input: "local/clip_by_global_norm/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "local/clip_by_global_norm/truediv"
  input: "local/clip_by_global_norm/truediv_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/mul/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/mul"
  op: "Mul"
  input: "local/clip_by_global_norm/mul/x"
  input: "local/clip_by_global_norm/Minimum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/IsFinite"
  op: "IsFinite"
  input: "local/global_norm/global_norm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: nan
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/Select"
  op: "Select"
  input: "local/clip_by_global_norm/IsFinite"
  input: "local/clip_by_global_norm/mul"
  input: "local/clip_by_global_norm/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "local/gradients/concat"
  input: "local/clip_by_global_norm/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/local/clip_by_global_norm/_0"
  op: "Identity"
  input: "local/clip_by_global_norm/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "local/gradients/AddN_22"
  input: "local/clip_by_global_norm/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/local/clip_by_global_norm/_1"
  op: "Identity"
  input: "local/clip_by_global_norm/mul_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "local/gradients/AddN_20"
  input: "local/clip_by_global_norm/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/local/clip_by_global_norm/_2"
  op: "Identity"
  input: "local/clip_by_global_norm/mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "local/gradients/AddN_15"
  input: "local/clip_by_global_norm/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/local/clip_by_global_norm/_3"
  op: "Identity"
  input: "local/clip_by_global_norm/mul_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "local/gradients/AddN_12"
  input: "local/clip_by_global_norm/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/local/clip_by_global_norm/_4"
  op: "Identity"
  input: "local/clip_by_global_norm/mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "local/gradients/AddN_6"
  input: "local/clip_by_global_norm/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "local/clip_by_global_norm/local/clip_by_global_norm/_5"
  op: "Identity"
  input: "local/clip_by_global_norm/mul_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "global/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "local/obs_embed/embeddings"
  input: "ReadVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "local/obs_embed/embeddings"
  input: "^AssignVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "^AssignVariableOp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "^AssignVariableOp_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "^AssignVariableOp_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "^AssignVariableOp_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "local/policy/rnn/LinearWrapper/w_output"
  input: "global/policy/rnn/LinearWrapper/w_output/Read/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "local/policy/rnn/LinearWrapper/w_output"
  input: "^AssignVariableOp_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^AssignVariableOp"
  input: "^AssignVariableOp_1"
  input: "^AssignVariableOp_2"
  input: "^AssignVariableOp_3"
  input: "^AssignVariableOp_4"
  input: "^AssignVariableOp_5"
  device: "/device:CPU:0"
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "local/adjusted_lengths"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Sum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "local/off_policy_target_lengths"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "Sum_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "local/mul_5"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/policy_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/policy_loss"
      }
    }
  }
}
node {
  name: "model/policy_loss"
  op: "ScalarSummary"
  input: "model/policy_loss/tags"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "local/mul_9"
  input: "Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/topk_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/topk_loss"
      }
    }
  }
}
node {
  name: "model/topk_loss"
  op: "ScalarSummary"
  input: "model/topk_loss/tags"
  input: "truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "local/mul_8"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/entropy/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/entropy"
      }
    }
  }
}
node {
  name: "model/entropy"
  op: "ScalarSummary"
  input: "model/entropy/tags"
  input: "truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "local/add_1"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/loss"
      }
    }
  }
}
node {
  name: "model/loss"
  op: "ScalarSummary"
  input: "model/loss/tags"
  input: "truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy/rnn/while/LinearWrapper/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/gradients/local/policy_2/rnn/while/LinearWrapper/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/stack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/stack"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/grad_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/grad_norm"
      }
    }
  }
}
node {
  name: "model/grad_norm"
  op: "ScalarSummary"
  input: "model/grad_norm/tags"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/unclipped_grad_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/unclipped_grad_norm"
      }
    }
  }
}
node {
  name: "model/unclipped_grad_norm"
  op: "ScalarSummary"
  input: "model/unclipped_grad_norm/tags"
  input: "local/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_1"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_2"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_3"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_4"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/stack"
  op: "Pack"
  input: "global_norm_1/L2Loss"
  input: "global_norm_1/L2Loss_1"
  input: "global_norm_1/L2Loss_2"
  input: "global_norm_1/L2Loss_3"
  input: "global_norm_1/L2Loss_4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_1/Sum"
  op: "Sum"
  input: "global_norm_1/stack"
  input: "global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_1/mul"
  op: "Mul"
  input: "global_norm_1/Sum"
  input: "global_norm_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/global_norm"
  op: "Sqrt"
  input: "global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/non_embedding_var_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/non_embedding_var_norm"
      }
    }
  }
}
node {
  name: "model/non_embedding_var_norm"
  op: "ScalarSummary"
  input: "model/non_embedding_var_norm/tags"
  input: "global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "hparams/entropy_beta/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "hparams/entropy_beta"
      }
    }
  }
}
node {
  name: "hparams/entropy_beta"
  op: "ScalarSummary"
  input: "hparams/entropy_beta/tags"
  input: "local/entropy_beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "hparams/topk_loss_hparam/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "hparams/topk_loss_hparam"
      }
    }
  }
}
node {
  name: "hparams/topk_loss_hparam/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "hparams/topk_loss_hparam"
  op: "ScalarSummary"
  input: "hparams/topk_loss_hparam/tags"
  input: "hparams/topk_loss_hparam/values"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "hparams/learning_rate/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "hparams/learning_rate"
      }
    }
  }
}
node {
  name: "hparams/learning_rate"
  op: "ScalarSummary"
  input: "hparams/learning_rate/tags"
  input: "local/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/L2Loss"
  op: "L2Loss"
  input: "global_norm_2/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_norm_2/ReadVariableOp"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_1"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_2"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_3"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_4"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_5"
  op: "L2Loss"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/policy/rnn/LinearWrapper/w_output/Read/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/stack"
  op: "Pack"
  input: "global_norm_2/L2Loss"
  input: "global_norm_2/L2Loss_1"
  input: "global_norm_2/L2Loss_2"
  input: "global_norm_2/L2Loss_3"
  input: "global_norm_2/L2Loss_4"
  input: "global_norm_2/L2Loss_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_2/Sum"
  op: "Sum"
  input: "global_norm_2/stack"
  input: "global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_2/mul"
  op: "Mul"
  input: "global_norm_2/Sum"
  input: "global_norm_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/global_norm"
  op: "Sqrt"
  input: "global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/trainable_var_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/trainable_var_norm"
      }
    }
  }
}
node {
  name: "model/trainable_var_norm"
  op: "ScalarSummary"
  input: "model/trainable_var_norm/tags"
  input: "global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/loss"
      }
    }
  }
}
node {
  name: "loss/loss"
  op: "ScalarSummary"
  input: "loss/loss/tags"
  input: "local/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/entropy/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/entropy"
      }
    }
  }
}
node {
  name: "loss/entropy"
  op: "ScalarSummary"
  input: "loss/entropy/tags"
  input: "local/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/policy/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/policy"
      }
    }
  }
}
node {
  name: "loss/policy"
  op: "ScalarSummary"
  input: "loss/policy/tags"
  input: "local/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/offp/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/offp"
      }
    }
  }
}
node {
  name: "loss/offp"
  op: "ScalarSummary"
  input: "loss/offp/tags"
  input: "local/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/obs_embed/embeddings"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm/mul"
  op: "Mul"
  input: "norm/ReadVariableOp"
  input: "norm/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm/Sum"
  op: "Sum"
  input: "norm/mul"
  input: "norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm/Sqrt"
  op: "Sqrt"
  input: "norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm/Squeeze"
  op: "Squeeze"
  input: "norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "param_norms/obs_embed/embeddings_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "param_norms/obs_embed/embeddings_0"
      }
    }
  }
}
node {
  name: "param_norms/obs_embed/embeddings_0"
  op: "ScalarSummary"
  input: "param_norms/obs_embed/embeddings_0/tags"
  input: "norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_1/mul"
  op: "Mul"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_1/Sum"
  op: "Sum"
  input: "norm_1/mul"
  input: "norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_1/Sqrt"
  op: "Sqrt"
  input: "norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_1/Squeeze"
  op: "Squeeze"
  input: "norm_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
  op: "ScalarSummary"
  input: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0/tags"
  input: "norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_2/mul"
  op: "Mul"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "norm_2/Sum"
  op: "Sum"
  input: "norm_2/mul"
  input: "norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_2/Sqrt"
  op: "Sqrt"
  input: "norm_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_2/Squeeze"
  op: "Squeeze"
  input: "norm_2/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
  op: "ScalarSummary"
  input: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0/tags"
  input: "norm_2/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_3/mul"
  op: "Mul"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_3/Sum"
  op: "Sum"
  input: "norm_3/mul"
  input: "norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_3/Sqrt"
  op: "Sqrt"
  input: "norm_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_3/Squeeze"
  op: "Squeeze"
  input: "norm_3/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
  op: "ScalarSummary"
  input: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0/tags"
  input: "norm_3/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_4/mul"
  op: "Mul"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  input: "local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "norm_4/Sum"
  op: "Sum"
  input: "norm_4/mul"
  input: "norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_4/Sqrt"
  op: "Sqrt"
  input: "norm_4/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_4/Squeeze"
  op: "Squeeze"
  input: "norm_4/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
  op: "ScalarSummary"
  input: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0/tags"
  input: "norm_4/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_5/mul"
  op: "Mul"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  input: "local/policy/rnn/LinearWrapper/w_output/Read/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "norm_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_5/Sum"
  op: "Sum"
  input: "norm_5/mul"
  input: "norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_5/Sqrt"
  op: "Sqrt"
  input: "norm_5/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_5/Squeeze"
  op: "Squeeze"
  input: "norm_5/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/w_output_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "param_norms/policy/rnn/LinearWrapper/w_output_0"
      }
    }
  }
}
node {
  name: "param_norms/policy/rnn/LinearWrapper/w_output_0"
  op: "ScalarSummary"
  input: "param_norms/policy/rnn/LinearWrapper/w_output_0/tags"
  input: "norm_5/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "norm_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "norm_6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "norm_6/strided_slice"
  op: "StridedSlice"
  input: "local/gradients/local/Gather_grad/Const"
  input: "norm_6/strided_slice/stack"
  input: "norm_6/strided_slice/stack_1"
  input: "norm_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "norm_6/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_0"
  input: "local/gradients/concat_1"
  input: "norm_6/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "norm_6/mul"
  op: "Mul"
  input: "norm_6/UnsortedSegmentSum"
  input: "norm_6/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "norm_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_6/Sum"
  op: "Sum"
  input: "norm_6/mul"
  input: "norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_6/Sqrt"
  op: "Sqrt"
  input: "norm_6/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_6/Squeeze"
  op: "Squeeze"
  input: "norm_6/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "grad_norms/obs_embed/embeddings_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "grad_norms/obs_embed/embeddings_0"
      }
    }
  }
}
node {
  name: "grad_norms/obs_embed/embeddings_0"
  op: "ScalarSummary"
  input: "grad_norms/obs_embed/embeddings_0/tags"
  input: "norm_6/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_7/mul"
  op: "Mul"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_1"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_7/Sum"
  op: "Sum"
  input: "norm_7/mul"
  input: "norm_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_7/Sqrt"
  op: "Sqrt"
  input: "norm_7/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_7/Squeeze"
  op: "Squeeze"
  input: "norm_7/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
  op: "ScalarSummary"
  input: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0/tags"
  input: "norm_7/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_8/mul"
  op: "Mul"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_2"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "norm_8/Sum"
  op: "Sum"
  input: "norm_8/mul"
  input: "norm_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_8/Sqrt"
  op: "Sqrt"
  input: "norm_8/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_8/Squeeze"
  op: "Squeeze"
  input: "norm_8/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
  op: "ScalarSummary"
  input: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0/tags"
  input: "norm_8/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_9/mul"
  op: "Mul"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_3"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_9/Sum"
  op: "Sum"
  input: "norm_9/mul"
  input: "norm_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_9/Sqrt"
  op: "Sqrt"
  input: "norm_9/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_9/Squeeze"
  op: "Squeeze"
  input: "norm_9/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
  op: "ScalarSummary"
  input: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0/tags"
  input: "norm_9/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_10/mul"
  op: "Mul"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_4"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "norm_10/Sum"
  op: "Sum"
  input: "norm_10/mul"
  input: "norm_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_10/Sqrt"
  op: "Sqrt"
  input: "norm_10/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_10/Squeeze"
  op: "Squeeze"
  input: "norm_10/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
  op: "ScalarSummary"
  input: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0/tags"
  input: "norm_10/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_11/mul"
  op: "Mul"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_5"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "norm_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_11/Sum"
  op: "Sum"
  input: "norm_11/mul"
  input: "norm_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_11/Sqrt"
  op: "Sqrt"
  input: "norm_11/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_11/Squeeze"
  op: "Squeeze"
  input: "norm_11/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/w_output_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "grad_norms/policy/rnn/LinearWrapper/w_output_0"
      }
    }
  }
}
node {
  name: "grad_norms/policy/rnn/LinearWrapper/w_output_0"
  op: "ScalarSummary"
  input: "grad_norms/policy/rnn/LinearWrapper/w_output_0/tags"
  input: "norm_11/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_12/mul"
  op: "Mul"
  input: "local/UnsortedSegmentSum"
  input: "local/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "norm_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_12/Sum"
  op: "Sum"
  input: "norm_12/mul"
  input: "norm_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_12/Sqrt"
  op: "Sqrt"
  input: "norm_12/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_12/Squeeze"
  op: "Squeeze"
  input: "norm_12/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/obs_embed/embeddings_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "unclipped_grad_norms/obs_embed/embeddings_0"
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/obs_embed/embeddings_0"
  op: "ScalarSummary"
  input: "unclipped_grad_norms/obs_embed/embeddings_0/tags"
  input: "norm_12/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_13/mul"
  op: "Mul"
  input: "local/gradients/AddN_22"
  input: "local/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_13/Sum"
  op: "Sum"
  input: "norm_13/mul"
  input: "norm_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_13/Sqrt"
  op: "Sqrt"
  input: "norm_13/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_13/Squeeze"
  op: "Squeeze"
  input: "norm_13/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
  op: "ScalarSummary"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0/tags"
  input: "norm_13/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_14/mul"
  op: "Mul"
  input: "local/gradients/AddN_20"
  input: "local/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "norm_14/Sum"
  op: "Sum"
  input: "norm_14/mul"
  input: "norm_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_14/Sqrt"
  op: "Sqrt"
  input: "norm_14/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_14/Squeeze"
  op: "Squeeze"
  input: "norm_14/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
  op: "ScalarSummary"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0/tags"
  input: "norm_14/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_15/mul"
  op: "Mul"
  input: "local/gradients/AddN_15"
  input: "local/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_15/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_15/Sum"
  op: "Sum"
  input: "norm_15/mul"
  input: "norm_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_15/Sqrt"
  op: "Sqrt"
  input: "norm_15/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_15/Squeeze"
  op: "Squeeze"
  input: "norm_15/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
  op: "ScalarSummary"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0/tags"
  input: "norm_15/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_16/mul"
  op: "Mul"
  input: "local/gradients/AddN_12"
  input: "local/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "norm_16/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "norm_16/Sum"
  op: "Sum"
  input: "norm_16/mul"
  input: "norm_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_16/Sqrt"
  op: "Sqrt"
  input: "norm_16/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_16/Squeeze"
  op: "Squeeze"
  input: "norm_16/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
  op: "ScalarSummary"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0/tags"
  input: "norm_16/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm_17/mul"
  op: "Mul"
  input: "local/gradients/AddN_6"
  input: "local/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "norm_17/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "norm_17/Sum"
  op: "Sum"
  input: "norm_17/mul"
  input: "norm_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_17/Sqrt"
  op: "Sqrt"
  input: "norm_17/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "norm_17/Squeeze"
  op: "Squeeze"
  input: "norm_17/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/w_output_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "unclipped_grad_norms/policy/rnn/LinearWrapper/w_output_0"
      }
    }
  }
}
node {
  name: "unclipped_grad_norms/policy/rnn/LinearWrapper/w_output_0"
  op: "ScalarSummary"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/w_output_0/tags"
  input: "norm_17/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "model/policy_loss"
  input: "model/topk_loss"
  input: "model/entropy"
  input: "model/loss"
  input: "model/grad_norm"
  input: "model/unclipped_grad_norm"
  input: "model/non_embedding_var_norm"
  input: "hparams/entropy_beta"
  input: "hparams/topk_loss_hparam"
  input: "hparams/learning_rate"
  input: "model/trainable_var_norm"
  input: "loss/loss"
  input: "loss/entropy"
  input: "loss/policy"
  input: "loss/offp"
  input: "param_norms/obs_embed/embeddings_0"
  input: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
  input: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
  input: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
  input: "param_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
  input: "param_norms/policy/rnn/LinearWrapper/w_output_0"
  input: "grad_norms/obs_embed/embeddings_0"
  input: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
  input: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
  input: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
  input: "grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
  input: "grad_norms/policy/rnn/LinearWrapper/w_output_0"
  input: "unclipped_grad_norms/obs_embed/embeddings_0"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel_0"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias_0"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel_0"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias_0"
  input: "unclipped_grad_norms/policy/rnn/LinearWrapper/w_output_0"
  attr {
    key: "N"
    value {
      i: 33
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "rl/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rl"
      }
    }
  }
}
node {
  name: "rl/serialized_summary_metadata"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\006\n\004text"
      }
    }
  }
}
node {
  name: "rl"
  op: "TensorSummaryV2"
  input: "rl/tag"
  input: "Placeholder"
  input: "rl/serialized_summary_metadata"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp/Initializer/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/obs_embed/embeddings/RMSProp"
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/obs_embed/embeddings/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "local/global/obs_embed/embeddings/RMSProp"
  input: "local/global/obs_embed/embeddings/RMSProp/Initializer/ones"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/obs_embed/embeddings/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp_1"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 15
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/obs_embed/embeddings/RMSProp_1"
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/obs_embed/embeddings/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "local/global/obs_embed/embeddings/RMSProp_1"
  input: "local/global/obs_embed/embeddings/RMSProp_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/obs_embed/embeddings/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/obs_embed/embeddings/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "A\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Initializer/ones/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 65
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Initializer/ones"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "A\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 65
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp/Initializer/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp/Initializer/ones"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Initializer/ones/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Initializer/ones"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp/Initializer/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp/Initializer/ones"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Initializer/ones/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Initializer/ones"
  op: "Fill"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Initializer/ones/shape_as_tensor"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Initializer/ones/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Initializer/ones"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1"
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local_1/RMSProp/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "local_1/RMSProp/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local_1/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/obs_embed/embeddings/Unique"
  op: "Unique"
  input: "local/gradients/concat_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/obs_embed/embeddings/Shape"
  op: "Shape"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/Unique"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/obs_embed/embeddings/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/obs_embed/embeddings/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/obs_embed/embeddings/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/obs_embed/embeddings/strided_slice"
  op: "StridedSlice"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/Shape"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/strided_slice/stack"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/strided_slice/stack_1"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/obs_embed/embeddings/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_0"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/Unique:1"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/obs_embed/embeddings/ResourceSparseApplyRMSProp"
  op: "ResourceSparseApplyRMSProp"
  input: "global/obs_embed/embeddings"
  input: "local/global/obs_embed/embeddings/RMSProp"
  input: "local/global/obs_embed/embeddings/RMSProp_1"
  input: "local/learning_rate"
  input: "local_1/RMSProp/decay"
  input: "local_1/RMSProp/momentum"
  input: "local_1/RMSProp/epsilon"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/UnsortedSegmentSum"
  input: "local_1/RMSProp/update_global/obs_embed/embeddings/Unique"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/obs_embed/embeddings"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1"
  input: "local/learning_rate"
  input: "local_1/RMSProp/decay"
  input: "local_1/RMSProp/momentum"
  input: "local_1/RMSProp/epsilon"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1"
  input: "local/learning_rate"
  input: "local_1/RMSProp/decay"
  input: "local_1/RMSProp/momentum"
  input: "local_1/RMSProp/epsilon"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1"
  input: "local/learning_rate"
  input: "local_1/RMSProp/decay"
  input: "local_1/RMSProp/momentum"
  input: "local_1/RMSProp/epsilon"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1"
  input: "local/learning_rate"
  input: "local_1/RMSProp/decay"
  input: "local_1/RMSProp/momentum"
  input: "local_1/RMSProp/epsilon"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "local_1/RMSProp/update_global/policy/rnn/LinearWrapper/w_output/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "global/policy/rnn/LinearWrapper/w_output"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp"
  input: "local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1"
  input: "local/learning_rate"
  input: "local_1/RMSProp/decay"
  input: "local_1/RMSProp/momentum"
  input: "local_1/RMSProp/epsilon"
  input: "local/clip_by_global_norm/local/clip_by_global_norm/_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/policy/rnn/LinearWrapper/w_output"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "local_1/RMSProp/update"
  op: "NoOp"
  input: "^local_1/RMSProp/update_global/obs_embed/embeddings/ResourceSparseApplyRMSProp"
  input: "^local_1/RMSProp/update_global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ResourceApplyRMSProp"
  input: "^local_1/RMSProp/update_global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ResourceApplyRMSProp"
  input: "^local_1/RMSProp/update_global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/ResourceApplyRMSProp"
  input: "^local_1/RMSProp/update_global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/ResourceApplyRMSProp"
  input: "^local_1/RMSProp/update_global/policy/rnn/LinearWrapper/w_output/ResourceApplyRMSProp"
  device: "/device:CPU:0"
}
node {
  name: "local_1/RMSProp/Const"
  op: "Const"
  input: "^local_1/RMSProp/update"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "local_1/RMSProp"
  op: "AssignAddVariableOp"
  input: "global/global_step"
  input: "local_1/RMSProp/Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "local_1/init"
  op: "NoOp"
  input: "^local/global/obs_embed/embeddings/RMSProp/Assign"
  input: "^local/global/obs_embed/embeddings/RMSProp_1/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/RMSProp_1/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/RMSProp_1/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/RMSProp_1/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/RMSProp_1/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/w_output/RMSProp/Assign"
  input: "^local/global/policy/rnn/LinearWrapper/w_output/RMSProp_1/Assign"
  input: "^local/obs_embed/embeddings/Assign"
  input: "^local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  input: "^local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  input: "^local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Assign"
  input: "^local/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Assign"
  input: "^local/policy/rnn/LinearWrapper/w_output/Assign"
  device: "/device:CPU:0"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global/obs_embed/embeddings"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "global/policy/rnn/LinearWrapper/w_output"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "global/global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "global/global_best_reward"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "global/is_best_model"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "global/run_number"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "global/program_count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 11
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "global/obs_embed/embeddings"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
        string_val: "global/policy/rnn/LinearWrapper/w_output"
        string_val: "global/global_step"
        string_val: "global/global_best_reward"
        string_val: "global/is_best_model"
        string_val: "global/run_number"
        string_val: "global/program_count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global/global_best_reward/Assign"
  input: "^global/global_step/Assign"
  input: "^global/is_best_model/Assign"
  input: "^global/obs_embed/embeddings/Assign"
  input: "^global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  input: "^global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  input: "^global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Assign"
  input: "^global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Assign"
  input: "^global/policy/rnn/LinearWrapper/w_output/Assign"
  input: "^global/program_count/Assign"
  input: "^global/run_number/Assign"
  device: "/device:CPU:0"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "global/global_best_reward"
        string_val: "global/global_step"
        string_val: "global/is_best_model"
        string_val: "global/obs_embed/embeddings"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
        string_val: "global/policy/rnn/LinearWrapper/w_output"
        string_val: "global/program_count"
        string_val: "global/run_number"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global/global_best_reward/Read/ReadVariableOp"
  input: "global/global_step/Read/ReadVariableOp"
  input: "global/is_best_model/Read/ReadVariableOp"
  input: "global/obs_embed/embeddings/Read/ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Read/ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Read/ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Read/ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Read/ReadVariableOp"
  input: "global/policy/rnn/LinearWrapper/w_output/Read/ReadVariableOp"
  input: "global/program_count/Read/ReadVariableOp"
  input: "global/run_number/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
        type: DT_INT64
        type: DT_BOOL
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "global/global_best_reward"
        string_val: "global/global_step"
        string_val: "global/is_best_model"
        string_val: "global/obs_embed/embeddings"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
        string_val: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
        string_val: "global/policy/rnn/LinearWrapper/w_output"
        string_val: "global/program_count"
        string_val: "global/run_number"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_DOUBLE
        type: DT_INT64
        type: DT_BOOL
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "global/global_best_reward"
  input: "save/Identity"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "global/global_step"
  input: "save/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global/is_best_model"
  input: "save/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "global/obs_embed/embeddings"
  input: "save/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "save/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "save/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "save/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "save/Identity_7"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "global/policy/rnn/LinearWrapper/w_output"
  input: "save/Identity_8"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "global/program_count"
  input: "save/Identity_9"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "global/run_number"
  input: "save/Identity_10"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
  device: "/device:CPU:0"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
versions {
  producer: 134
}
